{"version":3,"file":"parser-plugins.js","sources":["../lib/cards/audio.js","../lib/helpers.js","../lib/cards/before-after.js","../lib/cards/button.js","../lib/cards/embed.js","../lib/cards/file.js","../lib/cards/header.js","../lib/cards/html.js","../lib/cards/image.js","../lib/cards/product.js","../lib/cards/softReturn.js","../lib/cards/video.js","../lib/cards/gallery.js","../lib/parser-plugins.js"],"sourcesContent":["export function fromKoenigCard() {\n    return function kgAudioCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-audio-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-audio-title');\n        const audioNode = node.querySelector('.kg-audio-player-container audio');\n        const thumbnailNode = node.querySelector('.kg-audio-thumbnail');\n        const durationNode = node.querySelector('.kg-audio-duration');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const audioSrc = audioNode && audioNode.src;\n        const thumbnailSrc = thumbnailNode && thumbnailNode.src;\n        const durationText = durationNode && durationNode.innerHTML.trim();\n\n        if (!audioSrc) {\n            return;\n        }\n\n        const payload = {\n            src: audioSrc,\n            title: title\n        };\n        if (thumbnailSrc) {\n            payload.thumbnailSrc = thumbnailSrc;\n        }\n\n        if (durationText) {\n            const {minutes, seconds} = durationText.split(':');\n            try {\n                payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n            } catch (e) {\n                // ignore duration\n            }\n        }\n\n        const cardSection = builder.createCardSection('audio', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function addFigCaptionToPayload(node, payload, {selector = 'figcaption', options}) {\n    let figcaptions = Array.from(node.querySelectorAll(selector));\n\n    if (figcaptions.length) {\n        figcaptions.forEach((caption) => {\n            let cleanHtml = options.cleanBasicHtml(caption.innerHTML);\n            payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n            caption.remove(); // cleanup this processed element\n        });\n    }\n}\n\nexport function readImageAttributesFromNode(node) {\n    const attrs = {};\n\n    if (node.src) {\n        attrs.src = node.src;\n    }\n\n    if (node.width) {\n        attrs.width = node.width;\n    } else if (node.dataset && node.dataset.width) {\n        attrs.width = parseInt(node.dataset.width, 10);\n    }\n\n    if (node.height) {\n        attrs.height = node.height;\n    } else if (node.dataset && node.dataset.height) {\n        attrs.height = parseInt(node.dataset.height, 10);\n    }\n\n    if ((!node.width && !node.height) && node.getAttribute('data-image-dimensions')) {\n        const [, width, height] = (/^(\\d*)x(\\d*)$/gi).exec(node.getAttribute('data-image-dimensions'));\n        attrs.width = parseInt(width, 10);\n        attrs.height = parseInt(height, 10);\n    }\n\n    if (node.alt) {\n        attrs.alt = node.alt;\n    }\n\n    if (node.title) {\n        attrs.title = node.title;\n    }\n\n    if (node.parentNode.tagName === 'A') {\n        const href = node.parentNode.href;\n\n        if (href !== attrs.src) {\n            attrs.href = href;\n        }\n    }\n\n    return attrs;\n}\n","import {addFigCaptionToPayload} from '../helpers';\n\nexport function fromKoenigCard(options) {\n    return function kgBeforeAfterCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-before-after-card')) {\n            return;\n        }\n\n        const cardWidth = node.classList.contains('kg-width-full') ? 'full' : 'wide';\n\n        const images = node.querySelectorAll('img');\n\n        const beforeImage = images[1];\n        const afterImage = images[0];\n\n        if (!beforeImage || !afterImage) {\n            return;\n        }\n\n        const payload = {\n            cardWidth,\n            beforeImage: {\n                width: beforeImage.width,\n                src: beforeImage.src\n            },\n            afterImage: {\n                width: afterImage.width,\n                src: afterImage.src\n            }\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        const cardSection = builder.createCardSection('before-after', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromJetpackCard(options) {\n    return function jetpackJuxtaposeToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('wp-block-jetpack-image-compare')) {\n            return;\n        }\n\n        const cardWidth = 'wide';\n\n        const images = node.querySelectorAll('img');\n\n        const beforeImage = images[0];\n        const afterImage = images[1];\n\n        if (!beforeImage || !afterImage) {\n            return;\n        }\n\n        const payload = {\n            cardWidth,\n            beforeImage: {\n                width: 1000,\n                src: beforeImage.src\n            },\n            afterImage: {\n                width: 1000,\n                src: afterImage.src\n            }\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        const cardSection = builder.createCardSection('before-after', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","function getButtonText(node) {\n    let buttonText = node.textContent;\n    if (buttonText) {\n        buttonText = buttonText.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n    }\n    return buttonText;\n}\n\nexport function fromKoenigCard() {\n    return function kgButtonCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-button-card')) {\n            return;\n        }\n\n        const alignment = node.classList.contains('kg-align-center') ? 'center' : 'left';\n\n        const anchor = node.querySelector('a');\n\n        const buttonUrl = anchor.href;\n        const buttonText = getButtonText(anchor);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        const payload = {\n            alignment,\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromWordpressButton() {\n    return function wordpressButtonToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('wp-block-button__link')) {\n            return;\n        }\n\n        const buttonUrl = node.href;\n        const buttonText = getButtonText(node);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        let alignment = 'left';\n\n        if (node.closest('.is-content-justification-center, .is-content-justification-right')) {\n            alignment = 'center';\n        }\n\n        const payload = {\n            alignment,\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromSubstackButton() {\n    return function substackButtonToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('button')) {\n            return;\n        }\n\n        // substack has .button-wrapper elems with a data-attrs JSON object with `url` and `text`\n        // we're not using that in favour of grabbing the anchor element directly for simplicity\n\n        const anchor = node.tagName === 'A' ? node : node.querySelector('a');\n\n        if (!anchor) {\n            return;\n        }\n\n        const buttonUrl = anchor.href;\n        const buttonText = getButtonText(anchor);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        const payload = {\n            alignment: 'center', // all Substack buttons are centered\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","import {addFigCaptionToPayload} from '../helpers';\n\n// Helpers\n\nfunction _createPayloadForIframe(iframe) {\n    // If we don't have a src Or it's not an absolute URL, we can't handle this\n    // This regex handles http://, https:// or //\n    if (!iframe.src || !iframe.src.match(/^(https?:)?\\/\\//i)) {\n        return;\n    }\n\n    // if it's a schemaless URL, convert to https\n    if (iframe.src.match(/^\\/\\//)) {\n        iframe.src = `https:${iframe.src}`;\n    }\n\n    let payload = {\n        url: iframe.src\n    };\n\n    payload.html = iframe.outerHTML;\n\n    return payload;\n}\n\n// Plugins\n\nexport function fromMixtape(options) {\n    return function mixtapeEmbed(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'DIV' || !node.className.match(/graf--mixtapeEmbed/)) {\n            return;\n        }\n\n        // Grab the relevant elements - Anchor wraps most of the data\n        let anchorElement = node.querySelector('.markup--mixtapeEmbed-anchor');\n        let titleElement = anchorElement.querySelector('.markup--mixtapeEmbed-strong');\n        let descElement = anchorElement.querySelector('.markup--mixtapeEmbed-em');\n        // Image is a top level field inside it's own a tag\n        let imgElement = node.querySelector('.mixtapeImage');\n\n        // Grab individual values from the elements\n        let url = anchorElement.href;\n        let title = '';\n        let description = '';\n\n        if (titleElement && titleElement.innerHTML) {\n            title = options.cleanBasicHtml(titleElement.innerHTML);\n            // Cleanup anchor so we can see what's left now that we've processed title\n            anchorElement.removeChild(titleElement);\n        }\n\n        if (descElement && descElement.innerHTML) {\n            description = options.cleanBasicHtml(descElement.innerHTML);\n            // Cleanup anchor so we can see what's left now that we've processed description\n            anchorElement.removeChild(descElement);\n        }\n\n        // // Format our preferred structure.\n        let metadata = {\n            url,\n            title,\n            description\n        };\n\n        // Publisher is the remaining text in the anchor, once title & desc are removed\n        let publisher = options.cleanBasicHtml(anchorElement.innerHTML);\n        if (publisher) {\n            metadata.publisher = publisher;\n        }\n\n        // Image is optional,\n        // The element usually still exists with an additional has.mixtapeImage--empty class and has no background image\n        if (imgElement && imgElement.style['background-image']) {\n            metadata.thumbnail = imgElement.style['background-image'].match(/url\\(([^)]*?)\\)/)[1];\n        }\n\n        let payload = {url, metadata};\n        let cardSection = builder.createCardSection('bookmark', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigureIframe(options) {\n    return function figureIframeToEmbed(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let iframe = node.querySelector('iframe');\n\n        if (!iframe) {\n            return;\n        }\n\n        let payload = _createPayloadForIframe(iframe);\n\n        if (!payload) {\n            return;\n        }\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromIframe() {\n    return function iframeToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'IFRAME') {\n            return;\n        }\n\n        let payload = _createPayloadForIframe(node);\n\n        if (!payload) {\n            return;\n        }\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigureBlockquote(options) {\n    return function figureBlockquoteToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let blockquote = node.querySelector('blockquote');\n        let link = node.querySelector('a');\n\n        if (!blockquote || !link) {\n            return;\n        }\n\n        let url = link.href;\n\n        // If we don't have a url, or it's not an absolute URL, we can't handle this\n        if (!url || !url.match(/^https?:\\/\\//i)) {\n            return;\n        }\n\n        let payload = {\n            url: url\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        payload.html = node.innerHTML;\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromNFTEmbed() {\n    return function fromNFTEmbedToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || (node.tagName !== 'FIGURE' && node.tagName !== 'NFT-CARD' && node.tagName !== 'DIV')) {\n            return;\n        }\n\n        // Attempt to parse Ghost NFT Card\n        if (node.tagName === 'FIGURE') {\n            if (!node.classList.contains('kg-nft-card')) {\n                return;\n            }\n            let nftCard = node.querySelector('a');\n\n            if (!nftCard) {\n                return;\n            }\n\n            let payload;\n            try {\n                payload = JSON.parse(decodeURIComponent(nftCard.dataset.payload));\n            } catch (err) {\n                return nodeFinished();\n            }\n\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n\n        // Attempt to parse Substack NFT Card\n        if (node.tagName === 'DIV') {\n            if (!node.classList.contains('opensea')) {\n                return;\n            }\n\n            let url = node.querySelector('a');\n            let [match, contractAddress, tokenId] = url.href.match(/\\/assets\\/(0x[0-9a-f]+)\\/(\\d+)/);\n\n            if (!match) {\n                return;\n            }\n\n            let payload = {\n                url: url.href,\n                html: `<nft-card contractAddress=\"${contractAddress}\" tokenId=\"${tokenId}\"></nft-card><script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script>`\n            };\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n\n        if (node.tagName === 'NFT-CARD') {\n            let attr = node.attributes;\n            let contractAddress = (attr.contractAddress || attr.contractaddress || attr.tokenaddress || attr.contractaddress).value;\n            let tokenId = (attr.tokenId || attr.tokenid).value;\n            if (!contractAddress || !tokenId) {\n                return;\n            }\n            let payload = {\n                url: `https://opensea.io/assets/${contractAddress}/${tokenId}/`,\n                html: `<nft-card contractAddress=\"${contractAddress}\" tokenId=\"${tokenId}\"></nft-card><script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script>`\n            };\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n    };\n}\n","function transformSizeToBytes(sizeStr = '') {\n    if (!sizeStr) {\n        return 0;\n    }\n    const [sizeVal, sizeType] = sizeStr.split(' ');\n    if (!sizeVal || !sizeType) {\n        return 0;\n    }\n    if (sizeType === 'Bytes') {\n        return Number(sizeVal);\n    } else if (sizeType === 'KB') {\n        return Number(sizeVal) * 2048;\n    } else if (sizeType === 'MB') {\n        return Number(sizeVal) * 2048 * 2048;\n    }\n}\n\nexport function fromKoenigCard() {\n    return function kgFileCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-file-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-file-card-title');\n        const captionNode = node.querySelector('.kg-file-card-caption');\n        const fileNameNode = node.querySelector('.kg-file-card-filename');\n        const fileSizeNode = node.querySelector('.kg-file-card-filesize');\n        const fileCardLinkNode = node.querySelector('.kg-file-card-container');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const caption = captionNode && captionNode.innerHTML.trim();\n        const fileName = fileNameNode && fileNameNode.innerHTML.trim();\n        const fileSizeStr = fileSizeNode && fileSizeNode.innerHTML.trim();\n        const fileSrc = fileCardLinkNode && fileCardLinkNode.href;\n\n        if (!fileSrc) {\n            return;\n        }\n\n        const payload = {\n            src: fileSrc,\n            fileTitle: title,\n            fileCaption: caption,\n            fileSize: transformSizeToBytes(fileSizeStr),\n            fileName: fileName\n        };\n\n        const cardSection = builder.createCardSection('file', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function fromKoenigCard() {\n    return function kgHeaderCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-header-card')) {\n            return;\n        }\n\n        const headerNode = node.querySelector('.kg-header-card-header');\n        const subheaderNode = node.querySelector('.kg-header-card-subheader');\n        const buttonNode = node.querySelector('.kg-header-card-button');\n\n        let header = '';\n        let subheader = '';\n        let buttonText = '';\n        let buttonUrl = '';\n\n        if (headerNode) {\n            header = headerNode.innerHTML.trim();\n        }\n        if (subheaderNode) {\n            subheader = subheaderNode.innerHTML.trim();\n        }\n\n        if (buttonNode) {\n            buttonText = buttonNode.textContent.trim();\n            buttonUrl = buttonNode.getAttribute('href').trim();\n        }\n\n        if (!header && !subheader && (!buttonNode || !buttonText || !buttonUrl)) {\n            return;\n        }\n\n        const classes = [...node.classList];\n        let backgroundImageSrc = '';\n        if (node.getAttribute('data-kg-background-image')) {\n            backgroundImageSrc = node.getAttribute('data-kg-background-image').trim();\n        }\n\n        const payload = {\n            header,\n            subheader,\n            buttonEnabled: Boolean(buttonNode),\n            buttonText,\n            buttonUrl,\n            backgroundImageSrc,\n            size: 'small',\n            style: 'dark'\n        };\n\n        const sizeClass = classes.find(c => /^kg-size-(small|medium|large)$/.test(c));\n        const styleClass = classes.find(c => /^kg-style-(dark|light|accent|image)$/.test(c));\n        if (sizeClass) {\n            payload.size = sizeClass.replace('kg-size-', '');\n        }\n        if (styleClass) {\n            payload.style = styleClass.replace('kg-style-', '');\n        }\n\n        const cardSection = builder.createCardSection('header', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","// https://github.com/TryGhost/Koenig/issues/1\n// allows arbitrary HTML blocks wrapped in our card comments to be extracted\n// into a HTML card rather than being put through the normal parse+plugins\nexport function fromKoenigCard() {\n    return function kgHtmlCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 8 || node.nodeValue !== 'kg-card-begin: html') {\n            return;\n        }\n\n        let html = [];\n\n        function isHtmlEndComment(n) {\n            return n && n.nodeType === 8 && n.nodeValue === 'kg-card-end: html';\n        }\n\n        let nextNode = node.nextSibling;\n        while (nextNode && !isHtmlEndComment(nextNode)) {\n            let currentNode = nextNode;\n            html.push(currentNode.outerHTML);\n            nextNode = currentNode.nextSibling;\n            // remove nodes as we go so that they don't go through the parser\n            currentNode.remove();\n        }\n\n        let payload = {html: html.join('\\n').trim()};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","import {addFigCaptionToPayload, readImageAttributesFromNode} from '../helpers';\n\nexport function fromImg() {\n    return function imgToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'IMG') {\n            return;\n        }\n\n        const payload = readImageAttributesFromNode(node);\n\n        const cardSection = builder.createCardSection('image', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigure(options) {\n    return function figureImgToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        const img = node.querySelector('img');\n        const kgClass = node.className.match(/kg-width-(wide|full)/);\n        const grafClass = node.className.match(/graf--layout(FillWidth|OutsetCenter)/);\n\n        if (!img) {\n            return;\n        }\n\n        const payload = readImageAttributesFromNode(img);\n\n        if (kgClass) {\n            payload.cardWidth = kgClass[1];\n        } else if (grafClass) {\n            payload.cardWidth = grafClass[1] === 'FillWidth' ? 'full' : 'wide';\n        }\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('image', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","function getButtonText(node) {\n    let buttonText = node.textContent;\n    if (buttonText) {\n        buttonText = buttonText.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n    }\n    return buttonText;\n}\n\nexport function fromKoenigCard() {\n    return function kgButtonCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-product-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-product-card-title');\n        const descriptionNode = node.querySelector('.kg-product-card-description');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const description = descriptionNode && descriptionNode.innerHTML.trim();\n\n        if (!title && !description) {\n            return;\n        }\n\n        const payload = {\n            productButtonEnabled: false,\n            productRatingEnabled: false,\n\n            productTitle: title,\n            productDescription: description\n        };\n\n        const img = node.querySelector('.kg-product-card-image');\n        if (img && img.getAttribute('src')) {\n            payload.productImageSrc = img.getAttribute('src');\n        }\n\n        const stars = [...node.querySelectorAll('.kg-product-card-rating-active')].length;\n        if (stars) {\n            payload.productRatingEnabled = true;\n            payload.productStarRating = stars;\n        }\n\n        const button = node.querySelector('a');\n\n        if (button) {\n            const buttonUrl = button.href;\n            const buttonText = getButtonText(button);\n\n            if (buttonUrl && buttonText) {\n                payload.productButtonEnabled = true;\n                payload.productButton = buttonText;\n                payload.productUrl = buttonUrl;\n            }\n        }\n\n        const cardSection = builder.createCardSection('product', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function fromBr() {\n    // mobiledoc by default ignores <BR> tags but we have a custom SoftReturn atom\n    return function fromBrToSoftReturnAtom(node, builder, {addMarkerable, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'BR') {\n            return;\n        }\n\n        let softReturn = builder.createAtom('soft-return');\n        addMarkerable(softReturn);\n\n        nodeFinished();\n    };\n}\n","export function fromKoenigCard() {\n    return function kgVideoCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-video-card')) {\n            return;\n        }\n\n        const videoNode = node.querySelector('.kg-video-player-container video');\n        const durationNode = node.querySelector('.kg-video-duration');\n        const videoSrc = videoNode && videoNode.src;\n        const durationText = durationNode && durationNode.innerHTML.trim();\n\n        if (!videoSrc) {\n            return;\n        }\n\n        const payload = {\n            src: videoSrc,\n            loop: !!videoNode.loop\n        };\n\n        if (durationText) {\n            const {minutes, seconds} = durationText.split(':');\n            try {\n                payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n            } catch (e) {\n                // ignore duration\n            }\n        }\n\n        const cardSection = builder.createCardSection('video', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","import {addFigCaptionToPayload, readImageAttributesFromNode} from '../helpers';\n\nfunction readGalleryImageAttributesFromNode(node, imgNum) {\n    const image = readImageAttributesFromNode(node);\n\n    image.fileName = node.src.match(/[^/]*$/)[0];\n    image.row = Math.floor(imgNum / 3);\n\n    return image;\n}\n\nexport function fromKoenigCard(options) {\n    return function kgGalleryCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        if (!node.className.match(/kg-gallery-card/)) {\n            return;\n        }\n\n        let payload = {};\n        let imgs = Array.from(node.querySelectorAll('img'));\n\n        // Process nodes into the payload\n        payload.images = imgs.map(readGalleryImageAttributesFromNode);\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromGrafGallery(options) {\n    return function grafGalleryToCard(node, builder, {addSection, nodeFinished}) {\n        function isGrafGallery(n) {\n            return n.nodeType === 1 && n.tagName === 'DIV' && n.dataset && n.dataset.paragraphCount && n.querySelectorAll('img').length > 0;\n        }\n\n        if (!isGrafGallery(node)) {\n            return;\n        }\n\n        let payload = {};\n\n        // These galleries exist in multiple divs. Read the images and caption from the first one...\n        let imgs = Array.from(node.querySelectorAll('img'));\n        addFigCaptionToPayload(node, payload, {options});\n\n        // ...and then iterate over any remaining divs until we run out of matches\n        let nextNode = node.nextSibling;\n        while (nextNode && isGrafGallery(nextNode)) {\n            let currentNode = nextNode;\n            imgs = imgs.concat(Array.from(currentNode.querySelectorAll('img')));\n            addFigCaptionToPayload(currentNode, payload, {options});\n            nextNode = currentNode.nextSibling;\n            // remove nodes as we go so that they don't go through the parser\n            currentNode.remove();\n        }\n\n        // Process nodes into the payload\n        payload.images = imgs.map(readGalleryImageAttributesFromNode);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromSqsGallery(options) {\n    return function sqsGalleriesToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'DIV' || !node.className.match(/sqs-gallery-container/) || node.className.match(/summary-/)) {\n            return;\n        }\n\n        let payload = {};\n\n        // Each image exists twice...\n        // The first image is wrapped in `<noscript>`\n        // The second image contains image dimensions but the src property needs to be taken from `data-src`.\n        let imgs = Array.from(node.querySelectorAll('img.thumb-image'));\n\n        imgs = imgs.map((img) => {\n            if (!img.getAttribute('src')) {\n                if (img.previousSibling.tagName === 'NOSCRIPT' && img.previousSibling.getElementsByTagName('img').length) {\n                    const prevNode = img.previousSibling;\n                    img.setAttribute('src', img.getAttribute('data-src'));\n                    prevNode.remove();\n                } else {\n                    return undefined;\n                }\n            }\n\n            return img;\n        });\n\n        addFigCaptionToPayload(node, payload, {options, selector: '.meta-title'});\n\n        // Process nodes into the payload\n        payload.images = imgs.map(readGalleryImageAttributesFromNode);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","/* global DOMParser, window */\n\n/**\n * Copied from:\n * https://github.com/TryGhost/Ghost-Admin/blob/1f3d77d7230dd47a7eb5f38b90dfa510b2a16801/lib/koenig-editor/addon/options/parser-plugins.js\n * Which makes use of:\n * https://github.com/TryGhost/Ghost-Admin/blob/1f3d77d7230dd47a7eb5f38b90dfa510b2a16801/lib/koenig-editor/addon/helpers/clean-basic-html.js\n *\n * These functions are used to proces nodes during parsing from DOM -> mobiledoc\n */\n\nimport cleanBasicHtml from '@tryghost/kg-clean-basic-html';\n\nimport * as audioCard from './cards/audio';\nimport * as beforeAfterCard from './cards/before-after';\nimport * as buttonCard from './cards/button';\nimport * as embedCard from './cards/embed';\nimport * as fileCard from './cards/file';\nimport * as headerCard from './cards/header';\nimport * as htmlCard from './cards/html';\nimport * as imageCard from './cards/image';\nimport * as productCard from './cards/product';\nimport * as softReturn from './cards/softReturn';\nimport * as videoCard from './cards/video';\nimport * as galleryCard from './cards/gallery';\n\nexport function createParserPlugins(_options = {}) {\n    const defaults = {};\n    const options = Object.assign({}, defaults, _options);\n\n    if (!options.createDocument) {\n        const Parser = (typeof DOMParser !== 'undefined' && DOMParser) || (typeof window !== 'undefined' && window.DOMParser);\n\n        if (!Parser) {\n            throw new Error('createParserPlugins() must be passed a `createDocument` function as an option when used in a non-browser environment');\n        }\n\n        options.createDocument = function (html) {\n            const parser = new Parser();\n            return parser.parseFromString(html, 'text/html');\n        };\n    }\n\n    options.cleanBasicHtml = function (html) {\n        return cleanBasicHtml(html, options);\n    };\n\n    // HELPERS -----------------------------------------------------------------\n\n    function _readFigCaptionFromNode(node, payload, selector = 'figcaption') {\n        let figcaptions = Array.from(node.querySelectorAll(selector));\n\n        if (figcaptions.length) {\n            figcaptions.forEach((caption) => {\n                let cleanHtml = options.cleanBasicHtml(caption.innerHTML);\n                payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n                caption.remove(); // cleanup this processed element\n            });\n        }\n    }\n\n    // PLUGINS -----------------------------------------------------------------\n\n    function kgCalloutCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-callout-card')) {\n            return;\n        }\n\n        const emojiNode = node.querySelector('.kg-callout-emoji');\n        const htmlNode = node.querySelector('.kg-callout-text');\n\n        const backgroundColor = node.style.backgroundColor || '#F1F3F4';\n\n        let calloutEmoji = '';\n        if (emojiNode) {\n            calloutEmoji = emojiNode.textContent;\n            if (calloutEmoji) {\n                calloutEmoji = calloutEmoji.trim();\n            }\n        }\n\n        let calloutText = htmlNode.innerHTML;\n\n        const payload = {\n            calloutEmoji,\n            calloutText,\n            backgroundColor\n        };\n\n        const cardSection = builder.createCardSection('callout', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function kgToggleCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-toggle-card')) {\n            return;\n        }\n\n        const headingNode = node.querySelector('.kg-toggle-heading-text');\n        const contentNode = node.querySelector('.kg-toggle-content');\n\n        let toggleHeading = headingNode.innerHTML;\n        let toggleContent = contentNode.innerText;\n\n        const payload = {\n            heading: toggleHeading,\n            content: toggleContent\n        };\n\n        const cardSection = builder.createCardSection('toggle', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    // leading newlines in text nodes will add a space to the beginning of the text\n    // which doesn't render correctly if we're replacing <br> with SoftReturn atoms\n    // after parsing text as markdown to html\n    function removeLeadingNewline(node) {\n        if (node.nodeType !== 3 || node.nodeName !== '#text') {\n            return;\n        }\n\n        node.nodeValue = node.nodeValue.replace(/^\\n/, '');\n    }\n\n    function hrToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'HR') {\n            return;\n        }\n\n        let cardSection = builder.createCardSection('hr');\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function figureToCodeCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let pre = node.querySelector('pre');\n\n        // If this figure doesn't have a pre tag in it\n        if (!pre) {\n            return;\n        }\n\n        let code = pre.querySelector('code');\n        let figcaption = node.querySelector('figcaption');\n\n        // if there's no caption the preCodeToCard plugin will pick it up instead\n        if (!code || !figcaption) {\n            return;\n        }\n\n        let payload = {\n            code: code.textContent\n        };\n\n        _readFigCaptionFromNode(node, payload);\n\n        let preClass = pre.getAttribute('class') || '';\n        let codeClass = code.getAttribute('class') || '';\n        let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n        let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n        if (languageMatches) {\n            payload.language = languageMatches[1].toLowerCase();\n        }\n\n        let cardSection = builder.createCardSection('code', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function preCodeToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'PRE') {\n            return;\n        }\n\n        let [codeElement] = node.children;\n\n        if (codeElement && codeElement.tagName === 'CODE') {\n            let payload = {code: codeElement.textContent};\n\n            let preClass = node.getAttribute('class') || '';\n            let codeClass = codeElement.getAttribute('class') || '';\n            let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n            let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n            if (languageMatches) {\n                payload.language = languageMatches[1].toLowerCase();\n            }\n\n            let cardSection = builder.createCardSection('code', payload);\n            addSection(cardSection);\n            nodeFinished();\n        }\n    }\n\n    function figureScriptToHtmlCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let script = node.querySelector('script');\n\n        if (!script || !script.src.match(/^https:\\/\\/gist\\.github\\.com/)) {\n            return;\n        }\n\n        let payload = {html: script.outerHTML};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    // Nested paragraphs in blockquote are currently treated as separate blockquotes,\n    // see [here](https://github.com/bustle/mobiledoc-kit/issues/715). When running migrations,\n    // this is not the desired behaviour and will cause the content to lose the previous semantic.\n    function blockquoteWithChildren(node) {\n        if (node.nodeType !== 1 || node.tagName !== 'BLOCKQUOTE' || node.children.length < 1) {\n            return;\n        }\n\n        const html = [];\n        const children = Array.from(node.children);\n\n        children.forEach((child) => {\n            let nextSibling = child.nextSibling;\n            let previousSibling = child.previousSibling;\n\n            // Only add a soft-break for two sequential paragraphs.\n            // Use the innerHTML only in that case, so Mobiledoc's default behaviour\n            // of creating separate blockquotes doesn't apply.\n            if (child.tagName === 'P' && (nextSibling && nextSibling.tagName === 'P')) {\n                html.push(`${child.innerHTML}<br><br>`);\n            } else if (child.tagName === 'P' && (previousSibling && previousSibling.tagName === 'P')) {\n                html.push(child.innerHTML);\n            } else {\n                html.push(child.outerHTML);\n            }\n        });\n\n        node.innerHTML = html.join('').trim();\n\n        return;\n    }\n\n    // we store alt-style blockquotes as `aside` sections as a workaround\n    // for mobiledoc not allowing arbitrary attributes on markup sections\n    function altBlockquoteToAside(node) {\n        if (node.nodeType !== 1 || node.tagName !== 'BLOCKQUOTE') {\n            return;\n        }\n\n        if (!node.classList.contains('kg-blockquote-alt')) {\n            return;\n        }\n\n        const replacementDoc = options.createDocument(`<aside>${node.innerHTML}</aside>`);\n        const aside = replacementDoc.querySelector('aside');\n\n        // bit of an ugly hack because\n        // 1. node.tagName is readonly so we can't directly change it's type\n        // 2. the node list of the current tree branch is not re-evaluated so removing\n        //    this node, replacing it, or adding a new _sibling_ will not be picked up\n        //\n        // relies on mobiledoc-kit's handling of nested elements picking the\n        // inner-most understandable section element when creating sections\n        node.textContent = '';\n        node.appendChild(aside);\n\n        // let the default parser handle the nested aside node, keeping any formatting\n        return;\n    }\n\n    function tableToHtmlCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'TABLE') {\n            return;\n        }\n\n        if (node.parentNode.tagName === 'TABLE') {\n            return;\n        }\n\n        let payload = {html: node.outerHTML};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    return [\n        beforeAfterCard.fromKoenigCard(options),\n        beforeAfterCard.fromJetpackCard(options),\n        embedCard.fromNFTEmbed(),\n        embedCard.fromMixtape(options),\n        htmlCard.fromKoenigCard(options),\n        buttonCard.fromKoenigCard(options),\n        buttonCard.fromWordpressButton(options),\n        buttonCard.fromSubstackButton(options),\n        kgCalloutCardToCard,\n        kgToggleCardToCard,\n        productCard.fromKoenigCard(options),\n        audioCard.fromKoenigCard(options),\n        videoCard.fromKoenigCard(options),\n        fileCard.fromKoenigCard(options),\n        headerCard.fromKoenigCard(options),\n        blockquoteWithChildren,\n        softReturn.fromBr(options),\n        removeLeadingNewline,\n        galleryCard.fromKoenigCard(options),\n        embedCard.fromFigureBlockquote(options), // I think these can contain images\n        galleryCard.fromGrafGallery(options),\n        galleryCard.fromSqsGallery(options),\n        imageCard.fromFigure(options),\n        imageCard.fromImg(options),\n        hrToCard,\n        figureToCodeCard,\n        preCodeToCard,\n        embedCard.fromFigureIframe(options),\n        embedCard.fromIframe(options), // Process iFrames without figures after ones with\n        figureScriptToHtmlCard,\n        altBlockquoteToAside,\n        tableToHtmlCard\n    ];\n}\n"],"names":["fromKoenigCard","kgAudioCardToCard","node","builder","addSection","nodeFinished","nodeType","classList","contains","titleNode","querySelector","audioNode","thumbnailNode","durationNode","title","innerHTML","trim","audioSrc","src","thumbnailSrc","durationText","payload","minutes","seconds","split","duration","parseInt","e","cardSection","createCardSection","addFigCaptionToPayload","selector","options","figcaptions","Array","from","querySelectorAll","length","forEach","caption","cleanHtml","cleanBasicHtml","remove","readImageAttributesFromNode","attrs","width","dataset","height","getAttribute","exec","alt","parentNode","tagName","href","kgBeforeAfterCardToCard","cardWidth","images","beforeImage","afterImage","fromJetpackCard","jetpackJuxtaposeToCard","getButtonText","buttonText","textContent","replace","kgButtonCardToCard","alignment","anchor","buttonUrl","fromWordpressButton","wordpressButtonToCard","closest","fromSubstackButton","substackButtonToCard","_createPayloadForIframe","iframe","match","url","html","outerHTML","fromMixtape","mixtapeEmbed","className","anchorElement","titleElement","descElement","imgElement","description","removeChild","metadata","publisher","style","thumbnail","fromFigureIframe","figureIframeToEmbed","fromIframe","iframeToEmbedCard","fromFigureBlockquote","figureBlockquoteToEmbedCard","blockquote","link","fromNFTEmbed","fromNFTEmbedToEmbedCard","nftCard","JSON","parse","decodeURIComponent","err","contractAddress","tokenId","attr","attributes","contractaddress","tokenaddress","value","tokenid","transformSizeToBytes","sizeStr","sizeVal","sizeType","Number","kgFileCardToCard","captionNode","fileNameNode","fileSizeNode","fileCardLinkNode","fileName","fileSizeStr","fileSrc","fileTitle","fileCaption","fileSize","kgHeaderCardToCard","headerNode","subheaderNode","buttonNode","header","subheader","classes","backgroundImageSrc","buttonEnabled","Boolean","size","sizeClass","find","c","test","styleClass","kgHtmlCardToCard","nodeValue","isHtmlEndComment","n","nextNode","nextSibling","currentNode","push","join","fromImg","imgToCard","fromFigure","figureImgToCard","img","kgClass","grafClass","descriptionNode","productButtonEnabled","productRatingEnabled","productTitle","productDescription","productImageSrc","stars","productStarRating","button","productButton","productUrl","fromBr","fromBrToSoftReturnAtom","addMarkerable","softReturn","createAtom","kgVideoCardToCard","videoNode","videoSrc","loop","readGalleryImageAttributesFromNode","imgNum","image","row","Math","floor","kgGalleryCardToCard","imgs","map","fromGrafGallery","grafGalleryToCard","isGrafGallery","paragraphCount","concat","fromSqsGallery","sqsGalleriesToCard","previousSibling","getElementsByTagName","prevNode","setAttribute","undefined","createParserPlugins","_options","defaults","Object","assign","createDocument","Parser","DOMParser","window","Error","parser","parseFromString","_readFigCaptionFromNode","kgCalloutCardToCard","emojiNode","htmlNode","backgroundColor","calloutEmoji","calloutText","kgToggleCardToCard","headingNode","contentNode","toggleHeading","toggleContent","innerText","heading","content","removeLeadingNewline","nodeName","hrToCard","figureToCodeCard","pre","code","figcaption","preClass","codeClass","langRegex","languageMatches","language","toLowerCase","preCodeToCard","codeElement","children","figureScriptToHtmlCard","script","blockquoteWithChildren","child","altBlockquoteToAside","replacementDoc","aside","appendChild","tableToHtmlCard","beforeAfterCard","embedCard","htmlCard","buttonCard","productCard","audioCard","videoCard","fileCard","headerCard","galleryCard","imageCard"],"mappings":";;AAAO,SAASA,gBAAT,GAA0B;AAC7B,EAAA,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,OAAjC,EAAsE,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;AACzE,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,eAAxB,CAA5B,EAAsE;AAClE,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMC,SAAS,GAAGP,IAAI,CAACQ,aAAL,CAAmB,iBAAnB,CAAlB,CAAA;AACA,IAAA,MAAMC,SAAS,GAAGT,IAAI,CAACQ,aAAL,CAAmB,kCAAnB,CAAlB,CAAA;AACA,IAAA,MAAME,aAAa,GAAGV,IAAI,CAACQ,aAAL,CAAmB,qBAAnB,CAAtB,CAAA;AACA,IAAA,MAAMG,YAAY,GAAGX,IAAI,CAACQ,aAAL,CAAmB,oBAAnB,CAArB,CAAA;IACA,MAAMI,KAAK,GAAGL,SAAS,IAAIA,SAAS,CAACM,SAAV,CAAoBC,IAApB,EAA3B,CAAA;AACA,IAAA,MAAMC,QAAQ,GAAGN,SAAS,IAAIA,SAAS,CAACO,GAAxC,CAAA;AACA,IAAA,MAAMC,YAAY,GAAGP,aAAa,IAAIA,aAAa,CAACM,GAApD,CAAA;IACA,MAAME,YAAY,GAAGP,YAAY,IAAIA,YAAY,CAACE,SAAb,CAAuBC,IAAvB,EAArC,CAAA;;IAEA,IAAI,CAACC,QAAL,EAAe;AACX,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMI,OAAO,GAAG;AACZH,MAAAA,GAAG,EAAED,QADO;AAEZH,MAAAA,KAAK,EAAEA,KAAAA;KAFX,CAAA;;AAIA,IAAA,IAAIK,YAAJ,EAAkB;MACdE,OAAO,CAACF,YAAR,GAAuBA,YAAvB,CAAA;AACH,KAAA;;AAED,IAAA,IAAIC,YAAJ,EAAkB;MACd,MAAM;QAACE,OAAD;AAAUC,QAAAA,OAAAA;AAAV,OAAA,GAAqBH,YAAY,CAACI,KAAb,CAAmB,GAAnB,CAA3B,CAAA;;MACA,IAAI;AACAH,QAAAA,OAAO,CAACI,QAAR,GAAmBC,QAAQ,CAACJ,OAAD,CAAR,GAAoB,EAApB,GAAyBI,QAAQ,CAACH,OAAD,CAApD,CAAA;AACH,OAFD,CAEE,OAAOI,CAAP,EAAU;AAEX,OAAA;AACJ,KAAA;;IAED,MAAMC,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,OAA1B,EAAmCR,OAAnC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GArChB,CAAA;AAuCH;;ACxCM,SAASyB,sBAAT,CAAgC5B,IAAhC,EAAsCmB,OAAtC,EAAmF,IAAA,EAAA;EAAA,IAApC;AAACU,IAAAA,QAAQ,GAAG,YAAZ;AAA0BC,IAAAA,OAAAA;GAAU,GAAA,IAAA,CAAA;AACtF,EAAA,IAAIC,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWjC,IAAI,CAACkC,gBAAL,CAAsBL,QAAtB,CAAX,CAAlB,CAAA;;EAEA,IAAIE,WAAW,CAACI,MAAhB,EAAwB;AACpBJ,IAAAA,WAAW,CAACK,OAAZ,CAAqBC,OAAD,IAAa;MAC7B,IAAIC,SAAS,GAAGR,OAAO,CAACS,cAAR,CAAuBF,OAAO,CAACxB,SAA/B,CAAhB,CAAA;AACAM,MAAAA,OAAO,CAACkB,OAAR,GAAkBlB,OAAO,CAACkB,OAAR,GAAmB,CAAElB,EAAAA,OAAO,CAACkB,OAAQ,CAAA,GAAA,EAAKC,SAAU,CAAA,CAApD,GAAwDA,SAA1E,CAAA;MACAD,OAAO,CAACG,MAAR,EAAA,CAH6B;KAAjC,CAAA,CAAA;AAKH,GAAA;AACJ,CAAA;AAEM,SAASC,2BAAT,CAAqCzC,IAArC,EAA2C;EAC9C,MAAM0C,KAAK,GAAG,EAAd,CAAA;;EAEA,IAAI1C,IAAI,CAACgB,GAAT,EAAc;AACV0B,IAAAA,KAAK,CAAC1B,GAAN,GAAYhB,IAAI,CAACgB,GAAjB,CAAA;AACH,GAAA;;EAED,IAAIhB,IAAI,CAAC2C,KAAT,EAAgB;AACZD,IAAAA,KAAK,CAACC,KAAN,GAAc3C,IAAI,CAAC2C,KAAnB,CAAA;GADJ,MAEO,IAAI3C,IAAI,CAAC4C,OAAL,IAAgB5C,IAAI,CAAC4C,OAAL,CAAaD,KAAjC,EAAwC;AAC3CD,IAAAA,KAAK,CAACC,KAAN,GAAcnB,QAAQ,CAACxB,IAAI,CAAC4C,OAAL,CAAaD,KAAd,EAAqB,EAArB,CAAtB,CAAA;AACH,GAAA;;EAED,IAAI3C,IAAI,CAAC6C,MAAT,EAAiB;AACbH,IAAAA,KAAK,CAACG,MAAN,GAAe7C,IAAI,CAAC6C,MAApB,CAAA;GADJ,MAEO,IAAI7C,IAAI,CAAC4C,OAAL,IAAgB5C,IAAI,CAAC4C,OAAL,CAAaC,MAAjC,EAAyC;AAC5CH,IAAAA,KAAK,CAACG,MAAN,GAAerB,QAAQ,CAACxB,IAAI,CAAC4C,OAAL,CAAaC,MAAd,EAAsB,EAAtB,CAAvB,CAAA;AACH,GAAA;;AAED,EAAA,IAAK,CAAC7C,IAAI,CAAC2C,KAAN,IAAe,CAAC3C,IAAI,CAAC6C,MAAtB,IAAiC7C,IAAI,CAAC8C,YAAL,CAAkB,uBAAlB,CAArC,EAAiF;AAC7E,IAAA,MAAM,GAAGH,KAAH,EAAUE,MAAV,IAAqB,iBAAD,CAAoBE,IAApB,CAAyB/C,IAAI,CAAC8C,YAAL,CAAkB,uBAAlB,CAAzB,CAA1B,CAAA;IACAJ,KAAK,CAACC,KAAN,GAAcnB,QAAQ,CAACmB,KAAD,EAAQ,EAAR,CAAtB,CAAA;IACAD,KAAK,CAACG,MAAN,GAAerB,QAAQ,CAACqB,MAAD,EAAS,EAAT,CAAvB,CAAA;AACH,GAAA;;EAED,IAAI7C,IAAI,CAACgD,GAAT,EAAc;AACVN,IAAAA,KAAK,CAACM,GAAN,GAAYhD,IAAI,CAACgD,GAAjB,CAAA;AACH,GAAA;;EAED,IAAIhD,IAAI,CAACY,KAAT,EAAgB;AACZ8B,IAAAA,KAAK,CAAC9B,KAAN,GAAcZ,IAAI,CAACY,KAAnB,CAAA;AACH,GAAA;;AAED,EAAA,IAAIZ,IAAI,CAACiD,UAAL,CAAgBC,OAAhB,KAA4B,GAAhC,EAAqC;AACjC,IAAA,MAAMC,IAAI,GAAGnD,IAAI,CAACiD,UAAL,CAAgBE,IAA7B,CAAA;;AAEA,IAAA,IAAIA,IAAI,KAAKT,KAAK,CAAC1B,GAAnB,EAAwB;MACpB0B,KAAK,CAACS,IAAN,GAAaA,IAAb,CAAA;AACH,KAAA;AACJ,GAAA;;AAED,EAAA,OAAOT,KAAP,CAAA;AACH;;ACpDM,SAAS5C,gBAAT,CAAwBgC,OAAxB,EAAiC;AACpC,EAAA,OAAO,SAASsB,uBAAT,CAAiCpD,IAAjC,EAAuCC,OAAvC,EAA4E,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;AAC/E,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,sBAAxB,CAA5B,EAA6E;AACzE,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAM+C,SAAS,GAAGrD,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,eAAxB,CAAA,GAA2C,MAA3C,GAAoD,MAAtE,CAAA;AAEA,IAAA,MAAMgD,MAAM,GAAGtD,IAAI,CAACkC,gBAAL,CAAsB,KAAtB,CAAf,CAAA;AAEA,IAAA,MAAMqB,WAAW,GAAGD,MAAM,CAAC,CAAD,CAA1B,CAAA;AACA,IAAA,MAAME,UAAU,GAAGF,MAAM,CAAC,CAAD,CAAzB,CAAA;;AAEA,IAAA,IAAI,CAACC,WAAD,IAAgB,CAACC,UAArB,EAAiC;AAC7B,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMrC,OAAO,GAAG;MACZkC,SADY;AAEZE,MAAAA,WAAW,EAAE;QACTZ,KAAK,EAAEY,WAAW,CAACZ,KADV;QAET3B,GAAG,EAAEuC,WAAW,CAACvC,GAAAA;OAJT;AAMZwC,MAAAA,UAAU,EAAE;QACRb,KAAK,EAAEa,UAAU,CAACb,KADV;QAER3B,GAAG,EAAEwC,UAAU,CAACxC,GAAAA;AAFR,OAAA;KANhB,CAAA;AAYAY,IAAAA,sBAAsB,CAAC5B,IAAD,EAAOmB,OAAP,EAAgB;AAACW,MAAAA,OAAAA;AAAD,KAAhB,CAAtB,CAAA;IAEA,MAAMJ,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,cAA1B,EAA0CR,OAA1C,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAhChB,CAAA;AAkCH,CAAA;AAEM,SAASsD,eAAT,CAAyB3B,OAAzB,EAAkC;AACrC,EAAA,OAAO,SAAS4B,sBAAT,CAAgC1D,IAAhC,EAAsCC,OAAtC,EAA2E,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;AAC9E,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,gCAAxB,CAA5B,EAAuF;AACnF,MAAA,OAAA;AACH,KAAA;;IAED,MAAM+C,SAAS,GAAG,MAAlB,CAAA;AAEA,IAAA,MAAMC,MAAM,GAAGtD,IAAI,CAACkC,gBAAL,CAAsB,KAAtB,CAAf,CAAA;AAEA,IAAA,MAAMqB,WAAW,GAAGD,MAAM,CAAC,CAAD,CAA1B,CAAA;AACA,IAAA,MAAME,UAAU,GAAGF,MAAM,CAAC,CAAD,CAAzB,CAAA;;AAEA,IAAA,IAAI,CAACC,WAAD,IAAgB,CAACC,UAArB,EAAiC;AAC7B,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMrC,OAAO,GAAG;MACZkC,SADY;AAEZE,MAAAA,WAAW,EAAE;AACTZ,QAAAA,KAAK,EAAE,IADE;QAET3B,GAAG,EAAEuC,WAAW,CAACvC,GAAAA;OAJT;AAMZwC,MAAAA,UAAU,EAAE;AACRb,QAAAA,KAAK,EAAE,IADC;QAER3B,GAAG,EAAEwC,UAAU,CAACxC,GAAAA;AAFR,OAAA;KANhB,CAAA;AAYAY,IAAAA,sBAAsB,CAAC5B,IAAD,EAAOmB,OAAP,EAAgB;AAACW,MAAAA,OAAAA;AAAD,KAAhB,CAAtB,CAAA;IAEA,MAAMJ,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,cAA1B,EAA0CR,OAA1C,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAhChB,CAAA;AAkCH;;AC1ED,SAASwD,eAAT,CAAuB3D,IAAvB,EAA6B;AACzB,EAAA,IAAI4D,UAAU,GAAG5D,IAAI,CAAC6D,WAAtB,CAAA;;AACA,EAAA,IAAID,UAAJ,EAAgB;AACZA,IAAAA,UAAU,GAAGA,UAAU,CAACE,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAA+BA,CAAAA,OAA/B,CAAuC,MAAvC,EAA+C,GAA/C,CAAA,CAAoDhD,IAApD,EAAb,CAAA;AACH,GAAA;;AACD,EAAA,OAAO8C,UAAP,CAAA;AACH,CAAA;;AAEM,SAAS9D,gBAAT,GAA0B;AAC7B,EAAA,OAAO,SAASiE,kBAAT,CAA4B/D,IAA5B,EAAkCC,OAAlC,EAAuE,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;AAC1E,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,gBAAxB,CAA5B,EAAuE;AACnE,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAM0D,SAAS,GAAGhE,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,iBAAxB,CAAA,GAA6C,QAA7C,GAAwD,MAA1E,CAAA;AAEA,IAAA,MAAM2D,MAAM,GAAGjE,IAAI,CAACQ,aAAL,CAAmB,GAAnB,CAAf,CAAA;AAEA,IAAA,MAAM0D,SAAS,GAAGD,MAAM,CAACd,IAAzB,CAAA;AACA,IAAA,MAAMS,UAAU,GAAGD,eAAa,CAACM,MAAD,CAAhC,CAAA;;AAEA,IAAA,IAAI,CAACC,SAAD,IAAc,CAACN,UAAnB,EAA+B;AAC3B,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMzC,OAAO,GAAG;MACZ6C,SADY;MAEZE,SAFY;AAGZN,MAAAA,UAAAA;KAHJ,CAAA;IAMA,MAAMlC,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,QAA1B,EAAoCR,OAApC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAxBhB,CAAA;AA0BH,CAAA;AAEM,SAASgE,mBAAT,GAA+B;AAClC,EAAA,OAAO,SAASC,qBAAT,CAA+BpE,IAA/B,EAAqCC,OAArC,EAA0E,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;AAC7E,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,uBAAxB,CAA5B,EAA8E;AAC1E,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAM4D,SAAS,GAAGlE,IAAI,CAACmD,IAAvB,CAAA;AACA,IAAA,MAAMS,UAAU,GAAGD,eAAa,CAAC3D,IAAD,CAAhC,CAAA;;AAEA,IAAA,IAAI,CAACkE,SAAD,IAAc,CAACN,UAAnB,EAA+B;AAC3B,MAAA,OAAA;AACH,KAAA;;IAED,IAAII,SAAS,GAAG,MAAhB,CAAA;;AAEA,IAAA,IAAIhE,IAAI,CAACqE,OAAL,CAAa,mEAAb,CAAJ,EAAuF;AACnFL,MAAAA,SAAS,GAAG,QAAZ,CAAA;AACH,KAAA;;AAED,IAAA,MAAM7C,OAAO,GAAG;MACZ6C,SADY;MAEZE,SAFY;AAGZN,MAAAA,UAAAA;KAHJ,CAAA;IAMA,MAAMlC,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,QAA1B,EAAoCR,OAApC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GA1BhB,CAAA;AA4BH,CAAA;AAEM,SAASmE,kBAAT,GAA8B;AACjC,EAAA,OAAO,SAASC,oBAAT,CAA8BvE,IAA9B,EAAoCC,OAApC,EAAyE,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;AAC5E,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,QAAxB,CAA5B,EAA+D;AAC3D,MAAA,OAAA;AACH,KAH2E;AAM5E;;;AAEA,IAAA,MAAM2D,MAAM,GAAGjE,IAAI,CAACkD,OAAL,KAAiB,GAAjB,GAAuBlD,IAAvB,GAA8BA,IAAI,CAACQ,aAAL,CAAmB,GAAnB,CAA7C,CAAA;;IAEA,IAAI,CAACyD,MAAL,EAAa;AACT,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMC,SAAS,GAAGD,MAAM,CAACd,IAAzB,CAAA;AACA,IAAA,MAAMS,UAAU,GAAGD,eAAa,CAACM,MAAD,CAAhC,CAAA;;AAEA,IAAA,IAAI,CAACC,SAAD,IAAc,CAACN,UAAnB,EAA+B;AAC3B,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMzC,OAAO,GAAG;AACZ6C,MAAAA,SAAS,EAAE,QADC;AACS;MACrBE,SAFY;AAGZN,MAAAA,UAAAA;KAHJ,CAAA;IAMA,MAAMlC,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,QAA1B,EAAoCR,OAApC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GA7BhB,CAAA;AA+BH;;AChGD,SAASqE,uBAAT,CAAiCC,MAAjC,EAAyC;AACrC;AACA;AACA,EAAA,IAAI,CAACA,MAAM,CAACzD,GAAR,IAAe,CAACyD,MAAM,CAACzD,GAAP,CAAW0D,KAAX,CAAiB,kBAAjB,CAApB,EAA0D;AACtD,IAAA,OAAA;AACH,GALoC;;;EAQrC,IAAID,MAAM,CAACzD,GAAP,CAAW0D,KAAX,CAAiB,OAAjB,CAAJ,EAA+B;AAC3BD,IAAAA,MAAM,CAACzD,GAAP,GAAc,SAAQyD,MAAM,CAACzD,GAAI,CAAjC,CAAA,CAAA;AACH,GAAA;;AAED,EAAA,IAAIG,OAAO,GAAG;IACVwD,GAAG,EAAEF,MAAM,CAACzD,GAAAA;GADhB,CAAA;AAIAG,EAAAA,OAAO,CAACyD,IAAR,GAAeH,MAAM,CAACI,SAAtB,CAAA;AAEA,EAAA,OAAO1D,OAAP,CAAA;AACH;;;AAIM,SAAS2D,WAAT,CAAqBhD,OAArB,EAA8B;AACjC,EAAA,OAAO,SAASiD,YAAT,CAAsB/E,IAAtB,EAA4BC,OAA5B,EAAiE,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;IACpE,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,KAAxC,IAAiD,CAAClD,IAAI,CAACgF,SAAL,CAAeN,KAAf,CAAqB,oBAArB,CAAtD,EAAkG;AAC9F,MAAA,OAAA;AACH,KAHmE;;;AAMpE,IAAA,IAAIO,aAAa,GAAGjF,IAAI,CAACQ,aAAL,CAAmB,8BAAnB,CAApB,CAAA;AACA,IAAA,IAAI0E,YAAY,GAAGD,aAAa,CAACzE,aAAd,CAA4B,8BAA5B,CAAnB,CAAA;IACA,IAAI2E,WAAW,GAAGF,aAAa,CAACzE,aAAd,CAA4B,0BAA5B,CAAlB,CARoE;;IAUpE,IAAI4E,UAAU,GAAGpF,IAAI,CAACQ,aAAL,CAAmB,eAAnB,CAAjB,CAVoE;;AAapE,IAAA,IAAImE,GAAG,GAAGM,aAAa,CAAC9B,IAAxB,CAAA;IACA,IAAIvC,KAAK,GAAG,EAAZ,CAAA;IACA,IAAIyE,WAAW,GAAG,EAAlB,CAAA;;AAEA,IAAA,IAAIH,YAAY,IAAIA,YAAY,CAACrE,SAAjC,EAA4C;MACxCD,KAAK,GAAGkB,OAAO,CAACS,cAAR,CAAuB2C,YAAY,CAACrE,SAApC,CAAR,CADwC;;MAGxCoE,aAAa,CAACK,WAAd,CAA0BJ,YAA1B,CAAA,CAAA;AACH,KAAA;;AAED,IAAA,IAAIC,WAAW,IAAIA,WAAW,CAACtE,SAA/B,EAA0C;MACtCwE,WAAW,GAAGvD,OAAO,CAACS,cAAR,CAAuB4C,WAAW,CAACtE,SAAnC,CAAd,CADsC;;MAGtCoE,aAAa,CAACK,WAAd,CAA0BH,WAA1B,CAAA,CAAA;AACH,KA3BmE;;;AA8BpE,IAAA,IAAII,QAAQ,GAAG;MACXZ,GADW;MAEX/D,KAFW;AAGXyE,MAAAA,WAAAA;AAHW,KAAf,CA9BoE;;IAqCpE,IAAIG,SAAS,GAAG1D,OAAO,CAACS,cAAR,CAAuB0C,aAAa,CAACpE,SAArC,CAAhB,CAAA;;AACA,IAAA,IAAI2E,SAAJ,EAAe;MACXD,QAAQ,CAACC,SAAT,GAAqBA,SAArB,CAAA;AACH,KAxCmE;AA2CpE;;;IACA,IAAIJ,UAAU,IAAIA,UAAU,CAACK,KAAX,CAAiB,kBAAjB,CAAlB,EAAwD;AACpDF,MAAAA,QAAQ,CAACG,SAAT,GAAqBN,UAAU,CAACK,KAAX,CAAiB,kBAAjB,CAAA,CAAqCf,KAArC,CAA2C,iBAA3C,CAAA,CAA8D,CAA9D,CAArB,CAAA;AACH,KAAA;;AAED,IAAA,IAAIvD,OAAO,GAAG;MAACwD,GAAD;AAAMY,MAAAA,QAAAA;KAApB,CAAA;IACA,IAAI7D,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,UAA1B,EAAsCR,OAAtC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAnDhB,CAAA;AAqDH,CAAA;AAEM,SAASwF,gBAAT,CAA0B7D,OAA1B,EAAmC;AACtC,EAAA,OAAO,SAAS8D,mBAAT,CAA6B5F,IAA7B,EAAmCC,OAAnC,EAAwE,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IAC3E,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,QAA5C,EAAsD;AAClD,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIuB,MAAM,GAAGzE,IAAI,CAACQ,aAAL,CAAmB,QAAnB,CAAb,CAAA;;IAEA,IAAI,CAACiE,MAAL,EAAa;AACT,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAItD,OAAO,GAAGqD,uBAAuB,CAACC,MAAD,CAArC,CAAA;;IAEA,IAAI,CAACtD,OAAL,EAAc;AACV,MAAA,OAAA;AACH,KAAA;;AAEDS,IAAAA,sBAAsB,CAAC5B,IAAD,EAAOmB,OAAP,EAAgB;AAACW,MAAAA,OAAAA;AAAD,KAAhB,CAAtB,CAAA;IAEA,IAAIJ,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,OAA1B,EAAmCR,OAAnC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GArBhB,CAAA;AAuBH,CAAA;AAEM,SAAS0F,UAAT,GAAsB;AACzB,EAAA,OAAO,SAASC,iBAAT,CAA2B9F,IAA3B,EAAiCC,OAAjC,EAAsE,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IACzE,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,QAA5C,EAAsD;AAClD,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAI/B,OAAO,GAAGqD,uBAAuB,CAACxE,IAAD,CAArC,CAAA;;IAEA,IAAI,CAACmB,OAAL,EAAc;AACV,MAAA,OAAA;AACH,KAAA;;IAED,IAAIO,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,OAA1B,EAAmCR,OAAnC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAbhB,CAAA;AAeH,CAAA;AAEM,SAAS4F,oBAAT,CAA8BjE,OAA9B,EAAuC;AAC1C,EAAA,OAAO,SAASkE,2BAAT,CAAqChG,IAArC,EAA2CC,OAA3C,EAAgF,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IACnF,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,QAA5C,EAAsD;AAClD,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAI+C,UAAU,GAAGjG,IAAI,CAACQ,aAAL,CAAmB,YAAnB,CAAjB,CAAA;AACA,IAAA,IAAI0F,IAAI,GAAGlG,IAAI,CAACQ,aAAL,CAAmB,GAAnB,CAAX,CAAA;;AAEA,IAAA,IAAI,CAACyF,UAAD,IAAe,CAACC,IAApB,EAA0B;AACtB,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIvB,GAAG,GAAGuB,IAAI,CAAC/C,IAAf,CAZmF;;IAenF,IAAI,CAACwB,GAAD,IAAQ,CAACA,GAAG,CAACD,KAAJ,CAAU,eAAV,CAAb,EAAyC;AACrC,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIvD,OAAO,GAAG;AACVwD,MAAAA,GAAG,EAAEA,GAAAA;KADT,CAAA;AAIA/C,IAAAA,sBAAsB,CAAC5B,IAAD,EAAOmB,OAAP,EAAgB;AAACW,MAAAA,OAAAA;AAAD,KAAhB,CAAtB,CAAA;AAEAX,IAAAA,OAAO,CAACyD,IAAR,GAAe5E,IAAI,CAACa,SAApB,CAAA;IAEA,IAAIa,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,OAA1B,EAAmCR,OAAnC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GA7BhB,CAAA;AA+BH,CAAA;AAEM,SAASgG,YAAT,GAAwB;AAC3B,EAAA,OAAO,SAASC,uBAAT,CAAiCpG,IAAjC,EAAuCC,OAAvC,EAA4E,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IAC/E,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAwBJ,IAAI,CAACkD,OAAL,KAAiB,QAAjB,IAA6BlD,IAAI,CAACkD,OAAL,KAAiB,UAA9C,IAA4DlD,IAAI,CAACkD,OAAL,KAAiB,KAAzG,EAAiH;AAC7G,MAAA,OAAA;AACH,KAH8E;;;AAM/E,IAAA,IAAIlD,IAAI,CAACkD,OAAL,KAAiB,QAArB,EAA+B;MAC3B,IAAI,CAAClD,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,aAAxB,CAAL,EAA6C;AACzC,QAAA,OAAA;AACH,OAAA;;AACD,MAAA,IAAI+F,OAAO,GAAGrG,IAAI,CAACQ,aAAL,CAAmB,GAAnB,CAAd,CAAA;;MAEA,IAAI,CAAC6F,OAAL,EAAc;AACV,QAAA,OAAA;AACH,OAAA;;AAED,MAAA,IAAIlF,OAAJ,CAAA;;MACA,IAAI;AACAA,QAAAA,OAAO,GAAGmF,IAAI,CAACC,KAAL,CAAWC,kBAAkB,CAACH,OAAO,CAACzD,OAAR,CAAgBzB,OAAjB,CAA7B,CAAV,CAAA;OADJ,CAEE,OAAOsF,GAAP,EAAY;AACV,QAAA,OAAOtG,YAAY,EAAnB,CAAA;AACH,OAAA;;MAED,IAAIuB,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,OAA1B,EAAmCR,OAAnC,CAAlB,CAAA;MACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;AACA,MAAA,OAAOvB,YAAY,EAAnB,CAAA;AACH,KA1B8E;;;AA6B/E,IAAA,IAAIH,IAAI,CAACkD,OAAL,KAAiB,KAArB,EAA4B;MACxB,IAAI,CAAClD,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,SAAxB,CAAL,EAAyC;AACrC,QAAA,OAAA;AACH,OAAA;;AAED,MAAA,IAAIqE,GAAG,GAAG3E,IAAI,CAACQ,aAAL,CAAmB,GAAnB,CAAV,CAAA;AACA,MAAA,IAAI,CAACkE,KAAD,EAAQgC,eAAR,EAAyBC,OAAzB,CAAA,GAAoChC,GAAG,CAACxB,IAAJ,CAASuB,KAAT,CAAe,gCAAf,CAAxC,CAAA;;MAEA,IAAI,CAACA,KAAL,EAAY;AACR,QAAA,OAAA;AACH,OAAA;;AAED,MAAA,IAAIvD,OAAO,GAAG;QACVwD,GAAG,EAAEA,GAAG,CAACxB,IADC;AAEVyB,QAAAA,IAAI,EAAG,CAAA,2BAAA,EAA6B8B,eAAgB,CAAA,WAAA,EAAaC,OAAQ,CAAA,2FAAA,CAAA;OAF7E,CAAA;MAIA,IAAIjF,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,OAA1B,EAAmCR,OAAnC,CAAlB,CAAA;MACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;AACA,MAAA,OAAOvB,YAAY,EAAnB,CAAA;AACH,KAAA;;AAED,IAAA,IAAIH,IAAI,CAACkD,OAAL,KAAiB,UAArB,EAAiC;AAC7B,MAAA,IAAI0D,IAAI,GAAG5G,IAAI,CAAC6G,UAAhB,CAAA;AACA,MAAA,IAAIH,eAAe,GAAG,CAACE,IAAI,CAACF,eAAL,IAAwBE,IAAI,CAACE,eAA7B,IAAgDF,IAAI,CAACG,YAArD,IAAqEH,IAAI,CAACE,eAA3E,EAA4FE,KAAlH,CAAA;MACA,IAAIL,OAAO,GAAG,CAACC,IAAI,CAACD,OAAL,IAAgBC,IAAI,CAACK,OAAtB,EAA+BD,KAA7C,CAAA;;AACA,MAAA,IAAI,CAACN,eAAD,IAAoB,CAACC,OAAzB,EAAkC;AAC9B,QAAA,OAAA;AACH,OAAA;;AACD,MAAA,IAAIxF,OAAO,GAAG;AACVwD,QAAAA,GAAG,EAAG,CAAA,0BAAA,EAA4B+B,eAAgB,CAAA,CAAA,EAAGC,OAAQ,CADnD,CAAA,CAAA;AAEV/B,QAAAA,IAAI,EAAG,CAAA,2BAAA,EAA6B8B,eAAgB,CAAA,WAAA,EAAaC,OAAQ,CAAA,2FAAA,CAAA;OAF7E,CAAA;MAIA,IAAIjF,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,OAA1B,EAAmCR,OAAnC,CAAlB,CAAA;MACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;AACA,MAAA,OAAOvB,YAAY,EAAnB,CAAA;AACH,KAAA;GAhEL,CAAA;AAkEH;;ACpOD,SAAS+G,oBAAT,GAA4C;EAAA,IAAdC,OAAc,uEAAJ,EAAI,CAAA;;EACxC,IAAI,CAACA,OAAL,EAAc;AACV,IAAA,OAAO,CAAP,CAAA;AACH,GAAA;;EACD,MAAM,CAACC,OAAD,EAAUC,QAAV,CAAA,GAAsBF,OAAO,CAAC7F,KAAR,CAAc,GAAd,CAA5B,CAAA;;AACA,EAAA,IAAI,CAAC8F,OAAD,IAAY,CAACC,QAAjB,EAA2B;AACvB,IAAA,OAAO,CAAP,CAAA;AACH,GAAA;;EACD,IAAIA,QAAQ,KAAK,OAAjB,EAA0B;IACtB,OAAOC,MAAM,CAACF,OAAD,CAAb,CAAA;AACH,GAFD,MAEO,IAAIC,QAAQ,KAAK,IAAjB,EAAuB;AAC1B,IAAA,OAAOC,MAAM,CAACF,OAAD,CAAN,GAAkB,IAAzB,CAAA;AACH,GAFM,MAEA,IAAIC,QAAQ,KAAK,IAAjB,EAAuB;AAC1B,IAAA,OAAOC,MAAM,CAACF,OAAD,CAAN,GAAkB,IAAlB,GAAyB,IAAhC,CAAA;AACH,GAAA;AACJ,CAAA;;AAEM,SAAStH,gBAAT,GAA0B;AAC7B,EAAA,OAAO,SAASyH,gBAAT,CAA0BvH,IAA1B,EAAgCC,OAAhC,EAAqE,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;AACxE,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,cAAxB,CAA5B,EAAqE;AACjE,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMC,SAAS,GAAGP,IAAI,CAACQ,aAAL,CAAmB,qBAAnB,CAAlB,CAAA;AACA,IAAA,MAAMgH,WAAW,GAAGxH,IAAI,CAACQ,aAAL,CAAmB,uBAAnB,CAApB,CAAA;AACA,IAAA,MAAMiH,YAAY,GAAGzH,IAAI,CAACQ,aAAL,CAAmB,wBAAnB,CAArB,CAAA;AACA,IAAA,MAAMkH,YAAY,GAAG1H,IAAI,CAACQ,aAAL,CAAmB,wBAAnB,CAArB,CAAA;AACA,IAAA,MAAMmH,gBAAgB,GAAG3H,IAAI,CAACQ,aAAL,CAAmB,yBAAnB,CAAzB,CAAA;IACA,MAAMI,KAAK,GAAGL,SAAS,IAAIA,SAAS,CAACM,SAAV,CAAoBC,IAApB,EAA3B,CAAA;IACA,MAAMuB,OAAO,GAAGmF,WAAW,IAAIA,WAAW,CAAC3G,SAAZ,CAAsBC,IAAtB,EAA/B,CAAA;IACA,MAAM8G,QAAQ,GAAGH,YAAY,IAAIA,YAAY,CAAC5G,SAAb,CAAuBC,IAAvB,EAAjC,CAAA;IACA,MAAM+G,WAAW,GAAGH,YAAY,IAAIA,YAAY,CAAC7G,SAAb,CAAuBC,IAAvB,EAApC,CAAA;AACA,IAAA,MAAMgH,OAAO,GAAGH,gBAAgB,IAAIA,gBAAgB,CAACxE,IAArD,CAAA;;IAEA,IAAI,CAAC2E,OAAL,EAAc;AACV,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAM3G,OAAO,GAAG;AACZH,MAAAA,GAAG,EAAE8G,OADO;AAEZC,MAAAA,SAAS,EAAEnH,KAFC;AAGZoH,MAAAA,WAAW,EAAE3F,OAHD;AAIZ4F,MAAAA,QAAQ,EAAEf,oBAAoB,CAACW,WAAD,CAJlB;AAKZD,MAAAA,QAAQ,EAAEA,QAAAA;KALd,CAAA;IAQA,MAAMlG,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,MAA1B,EAAkCR,OAAlC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GA9BhB,CAAA;AAgCH;;AClDM,SAASL,gBAAT,GAA0B;AAC7B,EAAA,OAAO,SAASoI,kBAAT,CAA4BlI,IAA5B,EAAkCC,OAAlC,EAAuE,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;AAC1E,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,gBAAxB,CAA5B,EAAuE;AACnE,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAM6H,UAAU,GAAGnI,IAAI,CAACQ,aAAL,CAAmB,wBAAnB,CAAnB,CAAA;AACA,IAAA,MAAM4H,aAAa,GAAGpI,IAAI,CAACQ,aAAL,CAAmB,2BAAnB,CAAtB,CAAA;AACA,IAAA,MAAM6H,UAAU,GAAGrI,IAAI,CAACQ,aAAL,CAAmB,wBAAnB,CAAnB,CAAA;IAEA,IAAI8H,MAAM,GAAG,EAAb,CAAA;IACA,IAAIC,SAAS,GAAG,EAAhB,CAAA;IACA,IAAI3E,UAAU,GAAG,EAAjB,CAAA;IACA,IAAIM,SAAS,GAAG,EAAhB,CAAA;;AAEA,IAAA,IAAIiE,UAAJ,EAAgB;AACZG,MAAAA,MAAM,GAAGH,UAAU,CAACtH,SAAX,CAAqBC,IAArB,EAAT,CAAA;AACH,KAAA;;AACD,IAAA,IAAIsH,aAAJ,EAAmB;AACfG,MAAAA,SAAS,GAAGH,aAAa,CAACvH,SAAd,CAAwBC,IAAxB,EAAZ,CAAA;AACH,KAAA;;AAED,IAAA,IAAIuH,UAAJ,EAAgB;AACZzE,MAAAA,UAAU,GAAGyE,UAAU,CAACxE,WAAX,CAAuB/C,IAAvB,EAAb,CAAA;MACAoD,SAAS,GAAGmE,UAAU,CAACvF,YAAX,CAAwB,MAAxB,CAAA,CAAgChC,IAAhC,EAAZ,CAAA;AACH,KAAA;;AAED,IAAA,IAAI,CAACwH,MAAD,IAAW,CAACC,SAAZ,KAA0B,CAACF,UAAD,IAAe,CAACzE,UAAhB,IAA8B,CAACM,SAAzD,CAAJ,EAAyE;AACrE,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMsE,OAAO,GAAG,CAAC,GAAGxI,IAAI,CAACK,SAAT,CAAhB,CAAA;IACA,IAAIoI,kBAAkB,GAAG,EAAzB,CAAA;;AACA,IAAA,IAAIzI,IAAI,CAAC8C,YAAL,CAAkB,0BAAlB,CAAJ,EAAmD;MAC/C2F,kBAAkB,GAAGzI,IAAI,CAAC8C,YAAL,CAAkB,0BAAlB,CAAA,CAA8ChC,IAA9C,EAArB,CAAA;AACH,KAAA;;AAED,IAAA,MAAMK,OAAO,GAAG;MACZmH,MADY;MAEZC,SAFY;AAGZG,MAAAA,aAAa,EAAEC,OAAO,CAACN,UAAD,CAHV;MAIZzE,UAJY;MAKZM,SALY;MAMZuE,kBANY;AAOZG,MAAAA,IAAI,EAAE,OAPM;AAQZnD,MAAAA,KAAK,EAAE,MAAA;KARX,CAAA;AAWA,IAAA,MAAMoD,SAAS,GAAGL,OAAO,CAACM,IAAR,CAAaC,CAAC,IAAI,gCAAiCC,CAAAA,IAAjC,CAAsCD,CAAtC,CAAlB,CAAlB,CAAA;AACA,IAAA,MAAME,UAAU,GAAGT,OAAO,CAACM,IAAR,CAAaC,CAAC,IAAI,sCAAuCC,CAAAA,IAAvC,CAA4CD,CAA5C,CAAlB,CAAnB,CAAA;;AACA,IAAA,IAAIF,SAAJ,EAAe;MACX1H,OAAO,CAACyH,IAAR,GAAeC,SAAS,CAAC/E,OAAV,CAAkB,UAAlB,EAA8B,EAA9B,CAAf,CAAA;AACH,KAAA;;AACD,IAAA,IAAImF,UAAJ,EAAgB;MACZ9H,OAAO,CAACsE,KAAR,GAAgBwD,UAAU,CAACnF,OAAX,CAAmB,WAAnB,EAAgC,EAAhC,CAAhB,CAAA;AACH,KAAA;;IAED,MAAMpC,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,QAA1B,EAAoCR,OAApC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GA1DhB,CAAA;AA4DH;;AC7DD;AACA;AACA;AACO,SAASL,gBAAT,GAA0B;AAC7B,EAAA,OAAO,SAASoJ,gBAAT,CAA0BlJ,IAA1B,EAAgCC,OAAhC,EAAqE,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;IACxE,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACmJ,SAAL,KAAmB,qBAA9C,EAAqE;AACjE,MAAA,OAAA;AACH,KAAA;;IAED,IAAIvE,IAAI,GAAG,EAAX,CAAA;;IAEA,SAASwE,gBAAT,CAA0BC,CAA1B,EAA6B;AACzB,MAAA,OAAOA,CAAC,IAAIA,CAAC,CAACjJ,QAAF,KAAe,CAApB,IAAyBiJ,CAAC,CAACF,SAAF,KAAgB,mBAAhD,CAAA;AACH,KAAA;;AAED,IAAA,IAAIG,QAAQ,GAAGtJ,IAAI,CAACuJ,WAApB,CAAA;;AACA,IAAA,OAAOD,QAAQ,IAAI,CAACF,gBAAgB,CAACE,QAAD,CAApC,EAAgD;MAC5C,IAAIE,WAAW,GAAGF,QAAlB,CAAA;AACA1E,MAAAA,IAAI,CAAC6E,IAAL,CAAUD,WAAW,CAAC3E,SAAtB,CAAA,CAAA;AACAyE,MAAAA,QAAQ,GAAGE,WAAW,CAACD,WAAvB,CAH4C;;AAK5CC,MAAAA,WAAW,CAAChH,MAAZ,EAAA,CAAA;AACH,KAAA;;AAED,IAAA,IAAIrB,OAAO,GAAG;AAACyD,MAAAA,IAAI,EAAEA,IAAI,CAAC8E,IAAL,CAAU,IAAV,EAAgB5I,IAAhB,EAAA;KAArB,CAAA;IACA,IAAIY,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,MAA1B,EAAkCR,OAAlC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAvBhB,CAAA;AAyBH;;AC3BM,SAASwJ,OAAT,GAAmB;AACtB,EAAA,OAAO,SAASC,SAAT,CAAmB5J,IAAnB,EAAyBC,OAAzB,EAA8D,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;IACjE,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,KAA5C,EAAmD;AAC/C,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAM/B,OAAO,GAAGsB,2BAA2B,CAACzC,IAAD,CAA3C,CAAA;IAEA,MAAM0B,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,OAA1B,EAAmCR,OAAnC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAThB,CAAA;AAWH,CAAA;AAEM,SAAS0J,UAAT,CAAoB/H,OAApB,EAA6B;AAChC,EAAA,OAAO,SAASgI,eAAT,CAAyB9J,IAAzB,EAA+BC,OAA/B,EAAoE,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IACvE,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,QAA5C,EAAsD;AAClD,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAM6G,GAAG,GAAG/J,IAAI,CAACQ,aAAL,CAAmB,KAAnB,CAAZ,CAAA;IACA,MAAMwJ,OAAO,GAAGhK,IAAI,CAACgF,SAAL,CAAeN,KAAf,CAAqB,sBAArB,CAAhB,CAAA;IACA,MAAMuF,SAAS,GAAGjK,IAAI,CAACgF,SAAL,CAAeN,KAAf,CAAqB,sCAArB,CAAlB,CAAA;;IAEA,IAAI,CAACqF,GAAL,EAAU;AACN,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAM5I,OAAO,GAAGsB,2BAA2B,CAACsH,GAAD,CAA3C,CAAA;;AAEA,IAAA,IAAIC,OAAJ,EAAa;AACT7I,MAAAA,OAAO,CAACkC,SAAR,GAAoB2G,OAAO,CAAC,CAAD,CAA3B,CAAA;KADJ,MAEO,IAAIC,SAAJ,EAAe;AAClB9I,MAAAA,OAAO,CAACkC,SAAR,GAAoB4G,SAAS,CAAC,CAAD,CAAT,KAAiB,WAAjB,GAA+B,MAA/B,GAAwC,MAA5D,CAAA;AACH,KAAA;;AAEDrI,IAAAA,sBAAsB,CAAC5B,IAAD,EAAOmB,OAAP,EAAgB;AAACW,MAAAA,OAAAA;AAAD,KAAhB,CAAtB,CAAA;IAEA,IAAIJ,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,OAA1B,EAAmCR,OAAnC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAzBhB,CAAA;AA2BH;;AC5CD,SAASwD,aAAT,CAAuB3D,IAAvB,EAA6B;AACzB,EAAA,IAAI4D,UAAU,GAAG5D,IAAI,CAAC6D,WAAtB,CAAA;;AACA,EAAA,IAAID,UAAJ,EAAgB;AACZA,IAAAA,UAAU,GAAGA,UAAU,CAACE,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAA+BA,CAAAA,OAA/B,CAAuC,MAAvC,EAA+C,GAA/C,CAAA,CAAoDhD,IAApD,EAAb,CAAA;AACH,GAAA;;AACD,EAAA,OAAO8C,UAAP,CAAA;AACH,CAAA;;AAEM,SAAS9D,gBAAT,GAA0B;AAC7B,EAAA,OAAO,SAASiE,kBAAT,CAA4B/D,IAA5B,EAAkCC,OAAlC,EAAuE,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;AAC1E,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,iBAAxB,CAA5B,EAAwE;AACpE,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMC,SAAS,GAAGP,IAAI,CAACQ,aAAL,CAAmB,wBAAnB,CAAlB,CAAA;AACA,IAAA,MAAM0J,eAAe,GAAGlK,IAAI,CAACQ,aAAL,CAAmB,8BAAnB,CAAxB,CAAA;IACA,MAAMI,KAAK,GAAGL,SAAS,IAAIA,SAAS,CAACM,SAAV,CAAoBC,IAApB,EAA3B,CAAA;IACA,MAAMuE,WAAW,GAAG6E,eAAe,IAAIA,eAAe,CAACrJ,SAAhB,CAA0BC,IAA1B,EAAvC,CAAA;;AAEA,IAAA,IAAI,CAACF,KAAD,IAAU,CAACyE,WAAf,EAA4B;AACxB,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMlE,OAAO,GAAG;AACZgJ,MAAAA,oBAAoB,EAAE,KADV;AAEZC,MAAAA,oBAAoB,EAAE,KAFV;AAIZC,MAAAA,YAAY,EAAEzJ,KAJF;AAKZ0J,MAAAA,kBAAkB,EAAEjF,WAAAA;KALxB,CAAA;AAQA,IAAA,MAAM0E,GAAG,GAAG/J,IAAI,CAACQ,aAAL,CAAmB,wBAAnB,CAAZ,CAAA;;IACA,IAAIuJ,GAAG,IAAIA,GAAG,CAACjH,YAAJ,CAAiB,KAAjB,CAAX,EAAoC;MAChC3B,OAAO,CAACoJ,eAAR,GAA0BR,GAAG,CAACjH,YAAJ,CAAiB,KAAjB,CAA1B,CAAA;AACH,KAAA;;IAED,MAAM0H,KAAK,GAAG,CAAC,GAAGxK,IAAI,CAACkC,gBAAL,CAAsB,gCAAtB,CAAJ,CAAA,CAA6DC,MAA3E,CAAA;;AACA,IAAA,IAAIqI,KAAJ,EAAW;MACPrJ,OAAO,CAACiJ,oBAAR,GAA+B,IAA/B,CAAA;MACAjJ,OAAO,CAACsJ,iBAAR,GAA4BD,KAA5B,CAAA;AACH,KAAA;;AAED,IAAA,MAAME,MAAM,GAAG1K,IAAI,CAACQ,aAAL,CAAmB,GAAnB,CAAf,CAAA;;AAEA,IAAA,IAAIkK,MAAJ,EAAY;AACR,MAAA,MAAMxG,SAAS,GAAGwG,MAAM,CAACvH,IAAzB,CAAA;AACA,MAAA,MAAMS,UAAU,GAAGD,aAAa,CAAC+G,MAAD,CAAhC,CAAA;;MAEA,IAAIxG,SAAS,IAAIN,UAAjB,EAA6B;QACzBzC,OAAO,CAACgJ,oBAAR,GAA+B,IAA/B,CAAA;QACAhJ,OAAO,CAACwJ,aAAR,GAAwB/G,UAAxB,CAAA;QACAzC,OAAO,CAACyJ,UAAR,GAAqB1G,SAArB,CAAA;AACH,OAAA;AACJ,KAAA;;IAED,MAAMxC,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,SAA1B,EAAqCR,OAArC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAhDhB,CAAA;AAkDH;;AC3DM,SAAS0K,MAAT,GAAkB;AACrB;AACA,EAAA,OAAO,SAASC,sBAAT,CAAgC9K,IAAhC,EAAsCC,OAAtC,EAA8E,IAAA,EAAA;IAAA,IAA/B;MAAC8K,aAAD;AAAgB5K,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;IACjF,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,IAA5C,EAAkD;AAC9C,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAI8H,UAAU,GAAG/K,OAAO,CAACgL,UAAR,CAAmB,aAAnB,CAAjB,CAAA;IACAF,aAAa,CAACC,UAAD,CAAb,CAAA;IAEA7K,YAAY,EAAA,CAAA;GARhB,CAAA;AAUH;;ACZM,SAASL,gBAAT,GAA0B;AAC7B,EAAA,OAAO,SAASoL,iBAAT,CAA2BlL,IAA3B,EAAiCC,OAAjC,EAAsE,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;AACzE,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,eAAxB,CAA5B,EAAsE;AAClE,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAM6K,SAAS,GAAGnL,IAAI,CAACQ,aAAL,CAAmB,kCAAnB,CAAlB,CAAA;AACA,IAAA,MAAMG,YAAY,GAAGX,IAAI,CAACQ,aAAL,CAAmB,oBAAnB,CAArB,CAAA;AACA,IAAA,MAAM4K,QAAQ,GAAGD,SAAS,IAAIA,SAAS,CAACnK,GAAxC,CAAA;IACA,MAAME,YAAY,GAAGP,YAAY,IAAIA,YAAY,CAACE,SAAb,CAAuBC,IAAvB,EAArC,CAAA;;IAEA,IAAI,CAACsK,QAAL,EAAe;AACX,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMjK,OAAO,GAAG;AACZH,MAAAA,GAAG,EAAEoK,QADO;AAEZC,MAAAA,IAAI,EAAE,CAAC,CAACF,SAAS,CAACE,IAAAA;KAFtB,CAAA;;AAKA,IAAA,IAAInK,YAAJ,EAAkB;MACd,MAAM;QAACE,OAAD;AAAUC,QAAAA,OAAAA;AAAV,OAAA,GAAqBH,YAAY,CAACI,KAAb,CAAmB,GAAnB,CAA3B,CAAA;;MACA,IAAI;AACAH,QAAAA,OAAO,CAACI,QAAR,GAAmBC,QAAQ,CAACJ,OAAD,CAAR,GAAoB,EAApB,GAAyBI,QAAQ,CAACH,OAAD,CAApD,CAAA;AACH,OAFD,CAEE,OAAOI,CAAP,EAAU;AAEX,OAAA;AACJ,KAAA;;IAED,MAAMC,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,OAA1B,EAAmCR,OAAnC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GA9BhB,CAAA;AAgCH;;AC/BD,SAASmL,kCAAT,CAA4CtL,IAA5C,EAAkDuL,MAAlD,EAA0D;AACtD,EAAA,MAAMC,KAAK,GAAG/I,2BAA2B,CAACzC,IAAD,CAAzC,CAAA;AAEAwL,EAAAA,KAAK,CAAC5D,QAAN,GAAiB5H,IAAI,CAACgB,GAAL,CAAS0D,KAAT,CAAe,QAAf,CAAyB,CAAA,CAAzB,CAAjB,CAAA;EACA8G,KAAK,CAACC,GAAN,GAAYC,IAAI,CAACC,KAAL,CAAWJ,MAAM,GAAG,CAApB,CAAZ,CAAA;AAEA,EAAA,OAAOC,KAAP,CAAA;AACH,CAAA;;AAEM,SAAS1L,cAAT,CAAwBgC,OAAxB,EAAiC;AACpC,EAAA,OAAO,SAAS8J,mBAAT,CAA6B5L,IAA7B,EAAmCC,OAAnC,EAAwE,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;IAC3E,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,QAA5C,EAAsD;AAClD,MAAA,OAAA;AACH,KAAA;;IAED,IAAI,CAAClD,IAAI,CAACgF,SAAL,CAAeN,KAAf,CAAqB,iBAArB,CAAL,EAA8C;AAC1C,MAAA,OAAA;AACH,KAAA;;IAED,IAAIvD,OAAO,GAAG,EAAd,CAAA;AACA,IAAA,IAAI0K,IAAI,GAAG7J,KAAK,CAACC,IAAN,CAAWjC,IAAI,CAACkC,gBAAL,CAAsB,KAAtB,CAAX,CAAX,CAV2E;;IAa3Ef,OAAO,CAACmC,MAAR,GAAiBuI,IAAI,CAACC,GAAL,CAASR,kCAAT,CAAjB,CAAA;AAEA1J,IAAAA,sBAAsB,CAAC5B,IAAD,EAAOmB,OAAP,EAAgB;AAACW,MAAAA,OAAAA;AAAD,KAAhB,CAAtB,CAAA;IAEA,IAAIJ,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,SAA1B,EAAqCR,OAArC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAnBhB,CAAA;AAqBH,CAAA;AAEM,SAAS4L,eAAT,CAAyBjK,OAAzB,EAAkC;AACrC,EAAA,OAAO,SAASkK,iBAAT,CAA2BhM,IAA3B,EAAiCC,OAAjC,EAAsE,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IACzE,SAAS8L,aAAT,CAAuB5C,CAAvB,EAA0B;AACtB,MAAA,OAAOA,CAAC,CAACjJ,QAAF,KAAe,CAAf,IAAoBiJ,CAAC,CAACnG,OAAF,KAAc,KAAlC,IAA2CmG,CAAC,CAACzG,OAA7C,IAAwDyG,CAAC,CAACzG,OAAF,CAAUsJ,cAAlE,IAAoF7C,CAAC,CAACnH,gBAAF,CAAmB,KAAnB,CAA0BC,CAAAA,MAA1B,GAAmC,CAA9H,CAAA;AACH,KAAA;;AAED,IAAA,IAAI,CAAC8J,aAAa,CAACjM,IAAD,CAAlB,EAA0B;AACtB,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAImB,OAAO,GAAG,EAAd,CATyE;;AAYzE,IAAA,IAAI0K,IAAI,GAAG7J,KAAK,CAACC,IAAN,CAAWjC,IAAI,CAACkC,gBAAL,CAAsB,KAAtB,CAAX,CAAX,CAAA;AACAN,IAAAA,sBAAsB,CAAC5B,IAAD,EAAOmB,OAAP,EAAgB;AAACW,MAAAA,OAAAA;KAAjB,CAAtB,CAbyE;;AAgBzE,IAAA,IAAIwH,QAAQ,GAAGtJ,IAAI,CAACuJ,WAApB,CAAA;;AACA,IAAA,OAAOD,QAAQ,IAAI2C,aAAa,CAAC3C,QAAD,CAAhC,EAA4C;MACxC,IAAIE,WAAW,GAAGF,QAAlB,CAAA;AACAuC,MAAAA,IAAI,GAAGA,IAAI,CAACM,MAAL,CAAYnK,KAAK,CAACC,IAAN,CAAWuH,WAAW,CAACtH,gBAAZ,CAA6B,KAA7B,CAAX,CAAZ,CAAP,CAAA;AACAN,MAAAA,sBAAsB,CAAC4H,WAAD,EAAcrI,OAAd,EAAuB;AAACW,QAAAA,OAAAA;AAAD,OAAvB,CAAtB,CAAA;AACAwH,MAAAA,QAAQ,GAAGE,WAAW,CAACD,WAAvB,CAJwC;;AAMxCC,MAAAA,WAAW,CAAChH,MAAZ,EAAA,CAAA;AACH,KAxBwE;;;IA2BzErB,OAAO,CAACmC,MAAR,GAAiBuI,IAAI,CAACC,GAAL,CAASR,kCAAT,CAAjB,CAAA;IAEA,IAAI5J,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,SAA1B,EAAqCR,OAArC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GA/BhB,CAAA;AAiCH,CAAA;AAEM,SAASiM,cAAT,CAAwBtK,OAAxB,EAAiC;AACpC,EAAA,OAAO,SAASuK,kBAAT,CAA4BrM,IAA5B,EAAkCC,OAAlC,EAAuE,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;AAC1E,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,KAAxC,IAAiD,CAAClD,IAAI,CAACgF,SAAL,CAAeN,KAAf,CAAqB,uBAArB,CAAlD,IAAmG1E,IAAI,CAACgF,SAAL,CAAeN,KAAf,CAAqB,UAArB,CAAvG,EAAyI;AACrI,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIvD,OAAO,GAAG,EAAd,CAL0E;AAQ1E;AACA;;AACA,IAAA,IAAI0K,IAAI,GAAG7J,KAAK,CAACC,IAAN,CAAWjC,IAAI,CAACkC,gBAAL,CAAsB,iBAAtB,CAAX,CAAX,CAAA;AAEA2J,IAAAA,IAAI,GAAGA,IAAI,CAACC,GAAL,CAAU/B,GAAD,IAAS;AACrB,MAAA,IAAI,CAACA,GAAG,CAACjH,YAAJ,CAAiB,KAAjB,CAAL,EAA8B;AAC1B,QAAA,IAAIiH,GAAG,CAACuC,eAAJ,CAAoBpJ,OAApB,KAAgC,UAAhC,IAA8C6G,GAAG,CAACuC,eAAJ,CAAoBC,oBAApB,CAAyC,KAAzC,CAAA,CAAgDpK,MAAlG,EAA0G;AACtG,UAAA,MAAMqK,QAAQ,GAAGzC,GAAG,CAACuC,eAArB,CAAA;UACAvC,GAAG,CAAC0C,YAAJ,CAAiB,KAAjB,EAAwB1C,GAAG,CAACjH,YAAJ,CAAiB,UAAjB,CAAxB,CAAA,CAAA;AACA0J,UAAAA,QAAQ,CAAChK,MAAT,EAAA,CAAA;AACH,SAJD,MAIO;AACH,UAAA,OAAOkK,SAAP,CAAA;AACH,SAAA;AACJ,OAAA;;AAED,MAAA,OAAO3C,GAAP,CAAA;AACH,KAZM,CAAP,CAAA;AAcAnI,IAAAA,sBAAsB,CAAC5B,IAAD,EAAOmB,OAAP,EAAgB;MAACW,OAAD;AAAUD,MAAAA,QAAQ,EAAE,aAAA;KAApC,CAAtB,CA1B0E;;IA6B1EV,OAAO,CAACmC,MAAR,GAAiBuI,IAAI,CAACC,GAAL,CAASR,kCAAT,CAAjB,CAAA;IAEA,IAAI5J,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,SAA1B,EAAqCR,OAArC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;GAjChB,CAAA;AAmCH;;AC3GD;AA0BO,SAASwM,mBAAT,GAA4C;EAAA,IAAfC,QAAe,uEAAJ,EAAI,CAAA;;EAC/C,MAAMC,QAAQ,GAAG,EAAjB,CAAA;EACA,MAAM/K,OAAO,GAAGgL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,EAA4BD,QAA5B,CAAhB,CAAA;;AAEA,EAAA,IAAI,CAAC9K,OAAO,CAACkL,cAAb,EAA6B;AACzB,IAAA,MAAMC,MAAM,GAAI,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,IAAoD,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACD,SAA3G,CAAA;;IAEA,IAAI,CAACD,MAAL,EAAa;AACT,MAAA,MAAM,IAAIG,KAAJ,CAAU,sHAAV,CAAN,CAAA;AACH,KAAA;;AAEDtL,IAAAA,OAAO,CAACkL,cAAR,GAAyB,UAAUpI,IAAV,EAAgB;AACrC,MAAA,MAAMyI,MAAM,GAAG,IAAIJ,MAAJ,EAAf,CAAA;AACA,MAAA,OAAOI,MAAM,CAACC,eAAP,CAAuB1I,IAAvB,EAA6B,WAA7B,CAAP,CAAA;KAFJ,CAAA;AAIH,GAAA;;AAED9C,EAAAA,OAAO,CAACS,cAAR,GAAyB,UAAUqC,IAAV,EAAgB;AACrC,IAAA,OAAOrC,cAAc,CAACqC,IAAD,EAAO9C,OAAP,CAArB,CAAA;AACH,GAFD,CAjB+C;;;AAuB/C,EAAA,SAASyL,uBAAT,CAAiCvN,IAAjC,EAAuCmB,OAAvC,EAAyE;IAAA,IAAzBU,QAAyB,uEAAd,YAAc,CAAA;AACrE,IAAA,IAAIE,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWjC,IAAI,CAACkC,gBAAL,CAAsBL,QAAtB,CAAX,CAAlB,CAAA;;IAEA,IAAIE,WAAW,CAACI,MAAhB,EAAwB;AACpBJ,MAAAA,WAAW,CAACK,OAAZ,CAAqBC,OAAD,IAAa;QAC7B,IAAIC,SAAS,GAAGR,OAAO,CAACS,cAAR,CAAuBF,OAAO,CAACxB,SAA/B,CAAhB,CAAA;AACAM,QAAAA,OAAO,CAACkB,OAAR,GAAkBlB,OAAO,CAACkB,OAAR,GAAmB,CAAElB,EAAAA,OAAO,CAACkB,OAAQ,CAAA,GAAA,EAAKC,SAAU,CAAA,CAApD,GAAwDA,SAA1E,CAAA;QACAD,OAAO,CAACG,MAAR,EAAA,CAH6B;OAAjC,CAAA,CAAA;AAKH,KAAA;AACJ,GAjC8C;;;AAqC/C,EAAA,SAASgL,mBAAT,CAA6BxN,IAA7B,EAAmCC,OAAnC,EAAwE,IAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,IAAA,CAAA;;AACpE,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,iBAAxB,CAA5B,EAAwE;AACpE,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMmN,SAAS,GAAGzN,IAAI,CAACQ,aAAL,CAAmB,mBAAnB,CAAlB,CAAA;AACA,IAAA,MAAMkN,QAAQ,GAAG1N,IAAI,CAACQ,aAAL,CAAmB,kBAAnB,CAAjB,CAAA;IAEA,MAAMmN,eAAe,GAAG3N,IAAI,CAACyF,KAAL,CAAWkI,eAAX,IAA8B,SAAtD,CAAA;IAEA,IAAIC,YAAY,GAAG,EAAnB,CAAA;;AACA,IAAA,IAAIH,SAAJ,EAAe;MACXG,YAAY,GAAGH,SAAS,CAAC5J,WAAzB,CAAA;;AACA,MAAA,IAAI+J,YAAJ,EAAkB;AACdA,QAAAA,YAAY,GAAGA,YAAY,CAAC9M,IAAb,EAAf,CAAA;AACH,OAAA;AACJ,KAAA;;AAED,IAAA,IAAI+M,WAAW,GAAGH,QAAQ,CAAC7M,SAA3B,CAAA;AAEA,IAAA,MAAMM,OAAO,GAAG;MACZyM,YADY;MAEZC,WAFY;AAGZF,MAAAA,eAAAA;KAHJ,CAAA;IAMA,MAAMjM,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,SAA1B,EAAqCR,OAArC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;AACf,GAAA;;AAED,EAAA,SAAS2N,kBAAT,CAA4B9N,IAA5B,EAAkCC,OAAlC,EAAuE,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;AACnE,IAAA,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuB,CAACJ,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,gBAAxB,CAA5B,EAAuE;AACnE,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,MAAMyN,WAAW,GAAG/N,IAAI,CAACQ,aAAL,CAAmB,yBAAnB,CAApB,CAAA;AACA,IAAA,MAAMwN,WAAW,GAAGhO,IAAI,CAACQ,aAAL,CAAmB,oBAAnB,CAApB,CAAA;AAEA,IAAA,IAAIyN,aAAa,GAAGF,WAAW,CAAClN,SAAhC,CAAA;AACA,IAAA,IAAIqN,aAAa,GAAGF,WAAW,CAACG,SAAhC,CAAA;AAEA,IAAA,MAAMhN,OAAO,GAAG;AACZiN,MAAAA,OAAO,EAAEH,aADG;AAEZI,MAAAA,OAAO,EAAEH,aAAAA;KAFb,CAAA;IAKA,MAAMxM,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,QAA1B,EAAoCR,OAApC,CAApB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;AACf,GAvF8C;AA0F/C;AACA;;;EACA,SAASmO,oBAAT,CAA8BtO,IAA9B,EAAoC;IAChC,IAAIA,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACuO,QAAL,KAAkB,OAA7C,EAAsD;AAClD,MAAA,OAAA;AACH,KAAA;;AAEDvO,IAAAA,IAAI,CAACmJ,SAAL,GAAiBnJ,IAAI,CAACmJ,SAAL,CAAerF,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAAjB,CAAA;AACH,GAAA;;AAED,EAAA,SAAS0K,QAAT,CAAkBxO,IAAlB,EAAwBC,OAAxB,EAA6D,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IACzD,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,IAA5C,EAAkD;AAC9C,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIxB,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,IAA1B,CAAlB,CAAA;IACAzB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;AACf,GAAA;;AAED,EAAA,SAASsO,gBAAT,CAA0BzO,IAA1B,EAAgCC,OAAhC,EAAqE,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IACjE,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,QAA5C,EAAsD;AAClD,MAAA,OAAA;AACH,KAAA;;IAED,IAAIwL,GAAG,GAAG1O,IAAI,CAACQ,aAAL,CAAmB,KAAnB,CAAV,CALiE;;IAQjE,IAAI,CAACkO,GAAL,EAAU;AACN,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIC,IAAI,GAAGD,GAAG,CAAClO,aAAJ,CAAkB,MAAlB,CAAX,CAAA;IACA,IAAIoO,UAAU,GAAG5O,IAAI,CAACQ,aAAL,CAAmB,YAAnB,CAAjB,CAbiE;;AAgBjE,IAAA,IAAI,CAACmO,IAAD,IAAS,CAACC,UAAd,EAA0B;AACtB,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIzN,OAAO,GAAG;MACVwN,IAAI,EAAEA,IAAI,CAAC9K,WAAAA;KADf,CAAA;;AAIA0J,IAAAA,uBAAuB,CAACvN,IAAD,EAAOmB,OAAP,CAAvB,CAAA;;IAEA,IAAI0N,QAAQ,GAAGH,GAAG,CAAC5L,YAAJ,CAAiB,OAAjB,KAA6B,EAA5C,CAAA;IACA,IAAIgM,SAAS,GAAGH,IAAI,CAAC7L,YAAL,CAAkB,OAAlB,KAA8B,EAA9C,CAAA;IACA,IAAIiM,SAAS,GAAG,8BAAhB,CAAA;AACA,IAAA,IAAIC,eAAe,GAAGH,QAAQ,CAACnK,KAAT,CAAeqK,SAAf,CAAA,IAA6BD,SAAS,CAACpK,KAAV,CAAgBqK,SAAhB,CAAnD,CAAA;;AACA,IAAA,IAAIC,eAAJ,EAAqB;MACjB7N,OAAO,CAAC8N,QAAR,GAAmBD,eAAe,CAAC,CAAD,CAAf,CAAmBE,WAAnB,EAAnB,CAAA;AACH,KAAA;;IAED,IAAIxN,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,MAA1B,EAAkCR,OAAlC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;AACf,GAAA;;AAED,EAAA,SAASgP,aAAT,CAAuBnP,IAAvB,EAA6BC,OAA7B,EAAkE,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IAC9D,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,KAA5C,EAAmD;AAC/C,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAI,CAACkM,WAAD,CAAgBpP,GAAAA,IAAI,CAACqP,QAAzB,CAAA;;AAEA,IAAA,IAAID,WAAW,IAAIA,WAAW,CAAClM,OAAZ,KAAwB,MAA3C,EAAmD;AAC/C,MAAA,IAAI/B,OAAO,GAAG;QAACwN,IAAI,EAAES,WAAW,CAACvL,WAAAA;OAAjC,CAAA;MAEA,IAAIgL,QAAQ,GAAG7O,IAAI,CAAC8C,YAAL,CAAkB,OAAlB,KAA8B,EAA7C,CAAA;MACA,IAAIgM,SAAS,GAAGM,WAAW,CAACtM,YAAZ,CAAyB,OAAzB,KAAqC,EAArD,CAAA;MACA,IAAIiM,SAAS,GAAG,8BAAhB,CAAA;AACA,MAAA,IAAIC,eAAe,GAAGH,QAAQ,CAACnK,KAAT,CAAeqK,SAAf,CAAA,IAA6BD,SAAS,CAACpK,KAAV,CAAgBqK,SAAhB,CAAnD,CAAA;;AACA,MAAA,IAAIC,eAAJ,EAAqB;QACjB7N,OAAO,CAAC8N,QAAR,GAAmBD,eAAe,CAAC,CAAD,CAAf,CAAmBE,WAAnB,EAAnB,CAAA;AACH,OAAA;;MAED,IAAIxN,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,MAA1B,EAAkCR,OAAlC,CAAlB,CAAA;MACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;MACAvB,YAAY,EAAA,CAAA;AACf,KAAA;AACJ,GAAA;;AAED,EAAA,SAASmP,sBAAT,CAAgCtP,IAAhC,EAAsCC,OAAtC,EAA2E,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IACvE,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,QAA5C,EAAsD;AAClD,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIqM,MAAM,GAAGvP,IAAI,CAACQ,aAAL,CAAmB,QAAnB,CAAb,CAAA;;AAEA,IAAA,IAAI,CAAC+O,MAAD,IAAW,CAACA,MAAM,CAACvO,GAAP,CAAW0D,KAAX,CAAiB,8BAAjB,CAAhB,EAAkE;AAC9D,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIvD,OAAO,GAAG;MAACyD,IAAI,EAAE2K,MAAM,CAAC1K,SAAAA;KAA5B,CAAA;IACA,IAAInD,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,MAA1B,EAAkCR,OAAlC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;AACf,GA5L8C;AA+L/C;AACA;;;EACA,SAASqP,sBAAT,CAAgCxP,IAAhC,EAAsC;AAClC,IAAA,IAAIA,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,YAAxC,IAAwDlD,IAAI,CAACqP,QAAL,CAAclN,MAAd,GAAuB,CAAnF,EAAsF;AAClF,MAAA,OAAA;AACH,KAAA;;IAED,MAAMyC,IAAI,GAAG,EAAb,CAAA;IACA,MAAMyK,QAAQ,GAAGrN,KAAK,CAACC,IAAN,CAAWjC,IAAI,CAACqP,QAAhB,CAAjB,CAAA;AAEAA,IAAAA,QAAQ,CAACjN,OAAT,CAAkBqN,KAAD,IAAW;AACxB,MAAA,IAAIlG,WAAW,GAAGkG,KAAK,CAAClG,WAAxB,CAAA;AACA,MAAA,IAAI+C,eAAe,GAAGmD,KAAK,CAACnD,eAA5B,CAFwB;AAKxB;AACA;;AACA,MAAA,IAAImD,KAAK,CAACvM,OAAN,KAAkB,GAAlB,IAA0BqG,WAAW,IAAIA,WAAW,CAACrG,OAAZ,KAAwB,GAArE,EAA2E;AACvE0B,QAAAA,IAAI,CAAC6E,IAAL,CAAW,GAAEgG,KAAK,CAAC5O,SAAU,CAA7B,QAAA,CAAA,CAAA,CAAA;AACH,OAFD,MAEO,IAAI4O,KAAK,CAACvM,OAAN,KAAkB,GAAlB,IAA0BoJ,eAAe,IAAIA,eAAe,CAACpJ,OAAhB,KAA4B,GAA7E,EAAmF;AACtF0B,QAAAA,IAAI,CAAC6E,IAAL,CAAUgG,KAAK,CAAC5O,SAAhB,CAAA,CAAA;AACH,OAFM,MAEA;AACH+D,QAAAA,IAAI,CAAC6E,IAAL,CAAUgG,KAAK,CAAC5K,SAAhB,CAAA,CAAA;AACH,OAAA;KAbL,CAAA,CAAA;IAgBA7E,IAAI,CAACa,SAAL,GAAiB+D,IAAI,CAAC8E,IAAL,CAAU,EAAV,CAAc5I,CAAAA,IAAd,EAAjB,CAAA;AAEA,IAAA,OAAA;AACH,GA5N8C;AA+N/C;;;EACA,SAAS4O,oBAAT,CAA8B1P,IAA9B,EAAoC;IAChC,IAAIA,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,YAA5C,EAA0D;AACtD,MAAA,OAAA;AACH,KAAA;;IAED,IAAI,CAAClD,IAAI,CAACK,SAAL,CAAeC,QAAf,CAAwB,mBAAxB,CAAL,EAAmD;AAC/C,MAAA,OAAA;AACH,KAAA;;IAED,MAAMqP,cAAc,GAAG7N,OAAO,CAACkL,cAAR,CAAwB,CAAA,OAAA,EAAShN,IAAI,CAACa,SAAU,CAAA,QAAA,CAAhD,CAAvB,CAAA;IACA,MAAM+O,KAAK,GAAGD,cAAc,CAACnP,aAAf,CAA6B,OAA7B,CAAd,CAVgC;AAahC;AACA;AACA;AACA;AACA;AACA;;IACAR,IAAI,CAAC6D,WAAL,GAAmB,EAAnB,CAAA;AACA7D,IAAAA,IAAI,CAAC6P,WAAL,CAAiBD,KAAjB,EApBgC;;AAuBhC,IAAA,OAAA;AACH,GAAA;;AAED,EAAA,SAASE,eAAT,CAAyB9P,IAAzB,EAA+BC,OAA/B,EAAoE,KAAA,EAAA;IAAA,IAA5B;MAACC,UAAD;AAAaC,MAAAA,YAAAA;KAAe,GAAA,KAAA,CAAA;;IAChE,IAAIH,IAAI,CAACI,QAAL,KAAkB,CAAlB,IAAuBJ,IAAI,CAACkD,OAAL,KAAiB,OAA5C,EAAqD;AACjD,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIlD,IAAI,CAACiD,UAAL,CAAgBC,OAAhB,KAA4B,OAAhC,EAAyC;AACrC,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAI/B,OAAO,GAAG;MAACyD,IAAI,EAAE5E,IAAI,CAAC6E,SAAAA;KAA1B,CAAA;IACA,IAAInD,WAAW,GAAGzB,OAAO,CAAC0B,iBAAR,CAA0B,MAA1B,EAAkCR,OAAlC,CAAlB,CAAA;IACAjB,UAAU,CAACwB,WAAD,CAAV,CAAA;IACAvB,YAAY,EAAA,CAAA;AACf,GAAA;;EAED,OAAO,CACH4P,gBAAA,CAA+BjO,OAA/B,CADG,EAEHiO,eAAA,CAAgCjO,OAAhC,CAFG,EAGHkO,YAAA,EAHG,EAIHA,WAAA,CAAsBlO,OAAtB,CAJG,EAKHmO,gBAAA,CAAA,CALG,EAMHC,gBAAA,CAAA,CANG,EAOHA,mBAAA,CAAA,CAPG,EAQHA,kBAAA,CAAA,CARG,EASH1C,mBATG,EAUHM,kBAVG,EAWHqC,gBAAA,CAAA,CAXG,EAYHC,gBAAA,CAAA,CAZG,EAaHC,gBAAA,CAAA,CAbG,EAcHC,gBAAA,CAAA,CAdG,EAeHC,gBAAA,CAAA,CAfG,EAgBHf,sBAhBG,EAiBHxE,MAAA,CAAA,CAjBG,EAkBHsD,oBAlBG,EAmBHkC,cAAA,CAA2B1O,OAA3B,CAnBG,EAoBHkO,oBAAA,CAA+BlO,OAA/B,CApBG;EAqBH0O,eAAA,CAA4B1O,OAA5B,CArBG,EAsBH0O,cAAA,CAA2B1O,OAA3B,CAtBG,EAuBH2O,UAAA,CAAqB3O,OAArB,CAvBG,EAwBH2O,OAAA,CAAA,CAxBG,EAyBHjC,QAzBG,EA0BHC,gBA1BG,EA2BHU,aA3BG,EA4BHa,gBAAA,CAA2BlO,OAA3B,CA5BG,EA6BHkO,UAAA,CAAA,CA7BG;AA8BHV,EAAAA,sBA9BG,EA+BHI,oBA/BG,EAgCHI,eAhCG,CAAP,CAAA;AAkCH;;;;"}